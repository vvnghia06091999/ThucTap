[{"D:\\bitbucket\\vanthu-soft\\ui\\src\\index.js":"1","D:\\bitbucket\\vanthu-soft\\ui\\src\\reportWebVitals.js":"2","D:\\bitbucket\\vanthu-soft\\ui\\src\\App.js":"3","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\DangNhap\\DangNhap.js":"4","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\TrangChu.js":"5","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\NguoiDungMenu.js":"6","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanMenu.js":"7","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\ThemVanBan.js":"8","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanGui.js":"9","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanDen.js":"10","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\VaiTro.js":"11","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListVanBanDen.js":"12","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListDonVi.js":"13","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListNhom.js":"14","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListVanBanGui.js":"15","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemDonVi.js":"16","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemVanBanDen.js":"17","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemVanBanGui.js":"18","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListPhongBan.js":"19","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemPhongBan.js":"20","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListNguoiDung.js":"21","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemNguoiDung.js":"22","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemNhom.js":"23","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListCTNhom.js":"24","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\NguoiDung.js":"25","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\QuanLyMatKhau.js":"26","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\Nhom.js":"27","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanGuiLuu.js":"28","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanDenLuu.js":"29","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListVanBanLuu.js":"30","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemVanBanLuu.js":"31"},{"size":546,"mtime":1615612571521,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1615612571521,"results":"34","hashOfConfig":"33"},{"size":524,"mtime":1615612571508,"results":"35","hashOfConfig":"33"},{"size":4700,"mtime":1615612571510,"results":"36","hashOfConfig":"33"},{"size":20109,"mtime":1615612571517,"results":"37","hashOfConfig":"33"},{"size":2361,"mtime":1615612571516,"results":"38","hashOfConfig":"33"},{"size":2929,"mtime":1615612571519,"results":"39","hashOfConfig":"33"},{"size":23617,"mtime":1615612571518,"results":"40","hashOfConfig":"33"},{"size":19921,"mtime":1615612571519,"results":"41","hashOfConfig":"33"},{"size":31634,"mtime":1615612571518,"results":"42","hashOfConfig":"33"},{"size":706,"mtime":1615612571517,"results":"43","hashOfConfig":"33"},{"size":1209,"mtime":1615612571514,"results":"44","hashOfConfig":"33"},{"size":1502,"mtime":1615612571513,"results":"45","hashOfConfig":"33"},{"size":1172,"mtime":1615612571513,"results":"46","hashOfConfig":"33"},{"size":1211,"mtime":1615612571514,"results":"47","hashOfConfig":"33"},{"size":1519,"mtime":1615612571510,"results":"48","hashOfConfig":"33"},{"size":1400,"mtime":1615612571511,"results":"49","hashOfConfig":"33"},{"size":1386,"mtime":1615612571512,"results":"50","hashOfConfig":"33"},{"size":973,"mtime":1615612571513,"results":"51","hashOfConfig":"33"},{"size":1581,"mtime":1615612571510,"results":"52","hashOfConfig":"33"},{"size":582,"mtime":1615612571513,"results":"53","hashOfConfig":"33"},{"size":1191,"mtime":1615612571510,"results":"54","hashOfConfig":"33"},{"size":1392,"mtime":1615612571510,"results":"55","hashOfConfig":"33"},{"size":869,"mtime":1615612571512,"results":"56","hashOfConfig":"33"},{"size":4742,"mtime":1615612571516,"results":"57","hashOfConfig":"33"},{"size":3951,"mtime":1615612571517,"results":"58","hashOfConfig":"33"},{"size":11730,"mtime":1615612571516,"results":"59","hashOfConfig":"33"},{"size":2619,"mtime":1615612571519,"results":"60","hashOfConfig":"33"},{"size":2625,"mtime":1615612571518,"results":"61","hashOfConfig":"33"},{"size":858,"mtime":1615612571515,"results":"62","hashOfConfig":"33"},{"size":1257,"mtime":1615612571512,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ylxlcl",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"66"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"66"},"D:\\bitbucket\\vanthu-soft\\ui\\src\\index.js",[],["145","146"],"D:\\bitbucket\\vanthu-soft\\ui\\src\\reportWebVitals.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\App.js",["147"],"import './App.css';\r\nimport React,{useState} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport DangNhap from './components/DangNhap/DangNhap';\r\nimport TrangChu from './components/TrangChu/TrangChu';\r\n\r\nfunction App(props) {\r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/'><DangNhap/> </Route>\r\n      </Switch>\r\n      <Switch>\r\n        <Route path='/trangChu'><TrangChu/> </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\DangNhap\\DangNhap.js",["148"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },}));\r\n\r\nexport default function DangNhapView() {\r\n    const classes = useStyles();\r\n    const [tenTaiKhoan,setTenTaiKhoan] = useState();  \r\n    const [matKhau,setMatKhau] = useState();\r\n    const [login,setLogin] = useState(false);\r\n    const [idTaiKhoan,setIdTaiKhoan] = useState(localStorage.getItem('IdTaiKhoan'));\r\n\r\n    useEffect(() =>{\r\n      if(idTaiKhoan){\r\n        setLogin(true);\r\n      }else{\r\n        localStorage.clear();\r\n        setLogin(false);\r\n      }\r\n    },[])\r\n      \r\n\r\n    function DangNhap(tenTaiKhoan,matKhau){\r\n      const api = process.env.REACT_APP_API+\"taikhoan/dangNhap\";\r\n      const requestOptions ={\r\n          method: \"POST\",\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ \r\n              tenTaiKhoan : tenTaiKhoan,\r\n              matKhau : matKhau\r\n           })\r\n      };\r\n      fetch(api,requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          if(data.id){\r\n              setIdTaiKhoan(data.id)\r\n              localStorage.setItem('IdTaiKhoan',data.id)\r\n              setLogin(true)\r\n          }\r\n          else{\r\n            alert(\"Tên đăng nhập hoặc mật khẩu không chính xác !!!\")\r\n          }\r\n      }).catch(err=>{\r\n        alert(\"Kết nối với sever thất bại\");\r\n      })\r\n  }\r\n\r\n\r\n    if(!login){\r\n      return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Đăng Nhập\r\n            </Typography>\r\n            <div className={classes.form}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Tên đăng nhập\"\r\n                autoFocus\r\n                value = {tenTaiKhoan}\r\n                onChange={(e) => setTenTaiKhoan(e.target.value)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                value = {matKhau}\r\n                onChange={(e) => setMatKhau(e.target.value)}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={()=>{DangNhap(tenTaiKhoan,matKhau)}}\r\n              >\r\n                Đăng Nhập\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      );\r\n    }else {\r\n      return(\r\n        <Redirect to=\"/trangChu\"/>\r\n      )\r\n    }\r\n  }\r\n","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\TrangChu.js",["149","150","151","152","153","154"],"import React,{useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport NguoiDungMenu from './NguoiDung/NguoiDungMenu';\r\nimport VanBanMenu from './VanBan/VanBanMenu';\r\nimport ThemVanBan from './VanBan/ThemVanBan';\r\nimport VanBanGui from './VanBan/VanBanGui';\r\nimport VanBanDen from './VanBan/VanBanDen';\r\nimport VanBanGuiLuu from './VanBan/VanBanGuiLuu';\r\nimport VanBanDenLuu from './VanBan/VanBanDenLuu';\r\nimport NguoiDung from './NguoiDung/NguoiDung';\r\nimport QuanLyMatKhau from './NguoiDung/QuanLyMatKhau';\r\nimport Nhom from './NguoiDung/Nhom';\r\n\r\n\r\nconst Datastore = require('nedb');\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function TrangChu() {\r\n  // Sử dụng style\r\n  const classes = useStyles();\r\n\r\n  // Tạo Nedb\r\n  const donViDB = new Datastore('donViDB.db');\r\n  const phongBanDB = new Datastore('phongBanDB.db');\r\n  const nguoiDungDB = new Datastore('nguoiDungDB.db');\r\n  const loaiVanBanDB = new Datastore('loaiVanDB.db');\r\n  const linhVucVanBanDB = new Datastore('linhVucVanBanDB.db');\r\n  const nhomDB = new Datastore('nhomDB.db');\r\n  const chiTietNhomDB = new Datastore('chiTietNhomDB.db');\r\n  const vanBanGuiDB = new Datastore('vanBanGuiDB.db');\r\n  const chiTietVanBanGuiDB = new Datastore('chiTietVanBanGuiDB.db');\r\n  const vanBanDenDB = new Datastore('vanBanDenDB.db');\r\n  const vanBanDB = new Datastore('vanBanDB.db');\r\n  const vanBanLuuDB = new Datastore('vanBanLuuDB.db');\r\n  \r\n  // Load Nedb\r\n  donViDB.loadDatabase();\r\n  phongBanDB.loadDatabase();\r\n  nguoiDungDB.loadDatabase();\r\n  loaiVanBanDB.loadDatabase();\r\n  linhVucVanBanDB.loadDatabase(); \r\n  nhomDB.loadDatabase();\r\n  chiTietNhomDB.loadDatabase();\r\n  vanBanGuiDB.loadDatabase();\r\n  vanBanDenDB.loadDatabase();\r\n  vanBanDB.loadDatabase();\r\n  chiTietVanBanGuiDB.loadDatabase();\r\n  vanBanLuuDB.loadDatabase();\r\n\r\n  const [open, setOpen] = useState(true); // Điều chỉnh kích thước\r\n  const [logout,setLogout] = useState(false); // Điều kiện để logout\r\n  const [idTaiKhoan] = useState(localStorage.getItem('IdTaiKhoan')) // Lấy id Tài Khoản từ localStorage\r\n  const [numberPage,setNumberPage] = useState(0); // số Page\r\n  const [nguoiDung,setNguoiDung] = useState(''); // người dùng\r\n  const [change,setChange] = useState(1);\r\n  const [taiKhoan,setTaiKhoan] = useState();\r\n  \r\n  // Hàm chỉnh kích thước\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  function onChangeVanBan(){\r\n    setChange(change+1);\r\n  }\r\n\r\n   /**\r\n   * Tải các dữ liệu liên quan và lưu vào NeDB khi khởi động\r\n   * Xóa database của NeDB khi tắt trang\r\n   * Sau này sẽ tách ra để dễ đồng bộ cơ sở dữ liệu\r\n   */\r\n  useEffect(() =>{\r\n    donViDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    phongBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    nguoiDungDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    loaiVanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    linhVucVanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    const apiTaiKhoan = process.env.REACT_APP_API+\"taikhoan/timTaiKhoanTheoID/\"+idTaiKhoan;\r\n    fetch(apiTaiKhoan)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTaiKhoan(data);\r\n    }).catch(err => {\r\n      alert(\"Kết nối với sever thất bại\");\r\n    });\r\n    const apiDonVi = process.env.REACT_APP_API+\"donvi/xuatTatCaDonVi\";\r\n    fetch(apiDonVi)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      donViDB.insert(data);\r\n      data.map((item)=>{\r\n        getPhongBan(item.id);\r\n      })\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n    const apiNguoiDung = process.env.REACT_APP_API+\"nguoidung/xuatTatCaNguoiDung\";\r\n    fetch(apiNguoiDung)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      nguoiDungDB.insert(data);\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n    const apiLinhVucVanBan = process.env.REACT_APP_API+\"linhvucvanban/xuatTatCaLinhVucVanBan\";\r\n    fetch(apiLinhVucVanBan)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      linhVucVanBanDB.insert(data);\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n    const apiLoaiVanBan = process.env.REACT_APP_API+\"loaivanban/xuatTatCaLoaiVanBan\";\r\n    fetch(apiLoaiVanBan)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      loaiVanBanDB.insert(data);\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  return ()=>{\r\n    donViDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    phongBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    nguoiDungDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    loaiVanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    linhVucVanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanGuiDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanDenDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n  }\r\n},[]);\r\n\r\n  /**\r\n   *Tìm Người Dùng theo ID tài khoản đã đăng nhập\r\n   *Lấy danh sách văn bản của người dùng\r\n   */\r\n  useEffect(() => {\r\n    chiTietVanBanGuiDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanGuiDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanDenDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    nhomDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    chiTietNhomDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    vanBanLuuDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n    });\r\n    \r\n    if(logout===false){\r\n      const api = process.env.REACT_APP_API+\"nguoidung/timNguoiDungTheoIDTaiKhoan/\"+idTaiKhoan;\r\n      fetch(api)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          if(data.id){\r\n            setNguoiDung(data);\r\n            getVanBanGui(data.id);\r\n            getChiTietVanBanDen(data.id);\r\n            getNhom(data.id);\r\n            getVanBanLuu(data.id);\r\n          }else{\r\n            alert(\"Không thể lấy dữ liệu tài khoản\");\r\n            localStorage.clear();\r\n            setLogout(true);\r\n          }\r\n      }).catch(err => {\r\n        alert(\"Không thể lấy dữ liệu tài khoản\");\r\n        localStorage.clear();\r\n        setLogout(true);\r\n      })\r\n    }\r\n    return ()=>{\r\n      chiTietVanBanGuiDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n      vanBanGuiDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n      vanBanDenDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n      vanBanDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n      nhomDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n      chiTietNhomDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n      vanBanLuuDB.remove({}, { multi: true }, function (err, numRemoved) {\r\n      });\r\n    }\r\n  },[change]);\r\n\r\n  /**\r\n   * Hàm lấy danh sách văn bản lưu theo người dùng\r\n   * @param {number} idNguoiDung \r\n   */\r\n  function getVanBanLuu(idNguoiDung) {\r\n    const apiNhom = process.env.REACT_APP_API+\"vanbanluu/timVanBanLuuTheoNguoiDung/\"+idNguoiDung;\r\n    fetch(apiNhom)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      vanBanLuuDB.insert(data);\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Hàm lấy danh sách nhóm của người dùng\r\n   * @param {number} idNguoiTao \r\n   */\r\n  function getNhom(idNguoiTao){\r\n    const apiNhom = process.env.REACT_APP_API+\"nhom/timNhomTheoIDNguoiTao/\"+idNguoiTao;\r\n    fetch(apiNhom)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      nhomDB.insert(data);\r\n      data.map((item)=>{\r\n        getCTNhom(item.id);\r\n      })\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách chi tiết nhóm \r\n   * @param {number} idNhom \r\n   */\r\n  function getCTNhom(idNhom){\r\n    const apiCTNhom = process.env.REACT_APP_API+\"chitietnhom/timChiTietNhomTheoIDNhom/\"+idNhom;\r\n    fetch(apiCTNhom)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      chiTietNhomDB.insert(data);\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách văn bản gửi theo id người gửi\r\n   * @param {number} idNguoiGui \r\n   */\r\n  function getVanBanGui(idNguoiGui){\r\n    const apiVanBanGui = process.env.REACT_APP_API+\"vanbanguinhan/timVanBanGuiNhanTheoNguoiGui/\"+idNguoiGui;\r\n          fetch(apiVanBanGui)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            vanBanGuiDB.insert(data);\r\n            data.map((item)=>{\r\n              getVanBan(item.idVanBan);\r\n            });\r\n          }).catch(err => {\r\n            alert(err);\r\n          });\r\n  }\r\n  \r\n  /**\r\n   * Lấy danh sách văn bản đến theo id với điều kiện id người gửi khác id người dùng\r\n   * @param {number} idVanBanGui \r\n   * @param {number} idNguoiDung \r\n   */\r\n  function getVanBanDen(idVanBanGui,idNguoiDung){\r\n    const apiVanBanDen = process.env.REACT_APP_API+\"vanbanguinhan/timVanBanGuiNhanTheoID/\"+idVanBanGui;\r\n              fetch(apiVanBanDen)\r\n              .then(response => response.json())\r\n              .then(data =>{\r\n                vanBanDenDB.insert(data);\r\n                if(data.idNguoiGui!==idNguoiDung){\r\n                  getVanBan(data.idVanBan);\r\n                }\r\n              })\r\n              .catch(err =>{\r\n                alert(err);\r\n              })\r\n  }\r\n  /**\r\n   * lấy danh sách chi tiết id văn bản đến\r\n   * @param {number} idNguoiNhan \r\n   */\r\n  function getChiTietVanBanDen(idNguoiNhan){\r\n    const apiCTVanBanDen = process.env.REACT_APP_API+\"chiTietVanBanGuiNhan/timVanBanGuiNhanTheoNguoiNhan/\"+idNguoiNhan;\r\n          fetch(apiCTVanBanDen)\r\n          .then(response => response.json())\r\n          .then(data =>{\r\n            chiTietVanBanGuiDB.insert(data);\r\n            data.map((item)=>{\r\n              getVanBanDen(item.idVanBanGuiNhan,idNguoiNhan);\r\n            });\r\n          }).catch(err =>{\r\n            alert(err+\"-ChiTietVanBanDen\");\r\n          });\r\n  }\r\n\r\n  /**\r\n   * lấy văn bản theo id \r\n   * @param {number} idVanBan \r\n   */\r\n  function getVanBan(idVanBan){\r\n    vanBanDB.count({id : idVanBan},function(err,count){\r\n      if(count === 0){\r\n        const apiVanBan = process.env.REACT_APP_API+\"vanban/timVanBanTheoID/\"+idVanBan;\r\n        fetch(apiVanBan)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          vanBanDB.insert(data);\r\n        })\r\n        .catch(err=>{\r\n          alert(err+\"-GetVanBan\");\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Hàm lấy danh sách phòng ban theo đơn vị\r\n   * @param {number} idDonVi \r\n   */\r\n  function getPhongBan(idDonVi){\r\n    const apiPhongBan = process.env.REACT_APP_API+\"phongban/xuatPhongBanTheoDonVi/\"+idDonVi;\r\n      fetch(apiPhongBan)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        phongBanDB.insert(data);\r\n      }).catch(err => {\r\n        alert(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Xuất ra màn hình tương ứng theo số trang\r\n   * @param {number} num số trang \r\n   */\r\n  function getPage(num){\r\n    switch (num) {\r\n      case 1:\r\n        return <ThemVanBan \r\n        setNumberPage={setNumberPage} \r\n        loaiVanBanDB={loaiVanBanDB} \r\n        linhVucVanBanDB ={linhVucVanBanDB}\r\n        donViDB={donViDB}\r\n        phongBanDB={phongBanDB}\r\n        nguoiDungDB={nguoiDungDB}\r\n        onChangeVanBan={onChangeVanBan}\r\n        nguoiDung={nguoiDung}\r\n        nhomDB={nhomDB}\r\n        chiTietNhomDB={chiTietNhomDB}/>\r\n      \r\n      case 2:\r\n        return <VanBanDen\r\n          setNumberPage={setNumberPage} \r\n          loaiVanBanDB={loaiVanBanDB} \r\n          linhVucVanBanDB ={linhVucVanBanDB}\r\n          donViDB={donViDB}\r\n          phongBanDB={phongBanDB}\r\n          vanBanDB = {vanBanDB}\r\n          vanBanDenDB ={vanBanDenDB}\r\n          nguoiDungDB={nguoiDungDB}\r\n          vanBanLuuDB={vanBanLuuDB}\r\n          nhomDB={nhomDB}\r\n          chiTietNhomDB={chiTietNhomDB}\r\n          nguoiDung= {nguoiDung}\r\n          onChangeVanBan={onChangeVanBan}\r\n        />\r\n\r\n      case 3:\r\n        return <VanBanGui\r\n          setNumberPage={setNumberPage} \r\n          loaiVanBanDB={loaiVanBanDB} \r\n          linhVucVanBanDB ={linhVucVanBanDB}\r\n          donViDB={donViDB}\r\n          phongBanDB={phongBanDB}\r\n          vanBanDB = {vanBanDB}\r\n          vanBanGuiDB ={vanBanGuiDB}\r\n          nguoiDungDB={nguoiDungDB}\r\n          vanBanLuuDB={vanBanLuuDB}\r\n          nhomDB={nhomDB}\r\n          chiTietNhomDB={chiTietNhomDB}\r\n          nguoiDung= {nguoiDung}\r\n          onChangeVanBan={onChangeVanBan}\r\n        />\r\n      case 4: \r\n        return <VanBanGuiLuu\r\n          vanBanLuuDB={vanBanLuuDB}\r\n          vanBanDB={vanBanDB}\r\n          vanBanGuiDB={vanBanGuiDB}\r\n        />\r\n      case 5:\r\n        return <VanBanDenLuu\r\n          vanBanLuuDB={vanBanLuuDB}\r\n          vanBanDB={vanBanDB}\r\n          vanBanDenDB={vanBanDenDB}\r\n        />\r\n      case 8:\r\n        return <Nhom\r\n          nguoiDung = {nguoiDung}\r\n          nhomDB={nhomDB}\r\n          chiTietNhomDB={chiTietNhomDB}\r\n          donViDB={donViDB}\r\n          phongBanDB={phongBanDB}\r\n          nguoiDungDB={nguoiDungDB}\r\n          onChangeVanBan={onChangeVanBan}\r\n        />\r\n      case 6: \r\n        return <NguoiDung \r\n          nguoiDung = {nguoiDung}\r\n          setChange = {setChange}\r\n        />\r\n      case 7: \r\n        return <QuanLyMatKhau\r\n          taiKhoan={taiKhoan}\r\n          setLogout={setLogout}\r\n        />\r\n      default:\r\n        return <div></div>\r\n    }\r\n  }\r\n  /**\r\n   * xuất Title theo số trang\r\n   * @param {number} num số trang\r\n   */\r\n  function getTitle(num){\r\n    switch (num) {\r\n      case 1:\r\n        return \"Thêm văn bản\"\r\n      case 2:\r\n        return \"Văn Bản Đến\"\r\n      case 3:\r\n        return \"Văn Bản Gửi Đi\"\r\n      case 4: \r\n        return \"Văn Bản Gửi Lưu\"\r\n      case 5: \r\n        return \"Văn Bản Đến Lưu\"\r\n      case 6: \r\n        return \"Thông Tin Người Dùng\"\r\n      case 7: \r\n        return \"Đổi Mật Khẩu\"\r\n      case 8: \r\n        return \"Nhóm\"\r\n      default:\r\n        return \"Quản lý văn bản\"\r\n    }\r\n  }\r\n  /**\r\n   * Xét nếu logout = true thì sẽ chuyển hướng về trang đăng nhập\r\n   * logout = false thì sẽ xuất ra giao diện trang chủ\r\n   */\r\n  if(logout){\r\n    return(\r\n      <Redirect to=\"/\"/>\r\n    )\r\n  }else{\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              {getTitle(numberPage)}\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={10} color=\"secondary\"> \r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <Avatar src=\"https://cover-talk.zadn.vn/1/b/1/1/9/fd5acc4603e57c71a7ad42bb9fc20433.jpg\" />\r\n            <h2>{nguoiDung.tenNguoiDung}</h2>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List><VanBanMenu setNumberPage={setNumberPage}/></List>\r\n          <Divider />\r\n          <List><NguoiDungMenu setLogout={setLogout} setNumberPage={setNumberPage} setOpen={setOpen}/></List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} md={8} lg={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                  {getPage(numberPage)}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </main>cd\r\n      </div>\r\n    );\r\n  }\r\n}","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\NguoiDungMenu.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanMenu.js",["155"],"import React,{useState} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction VanBanMenu(props){\r\n    const classes = useStyles();\r\n    const [open,setOpen] = useState(false);\r\n    return (\r\n      <div>\r\n        <ListItem button onClick={() =>{props.setNumberPage(1)}}>\r\n          <ListItemIcon>\r\n            <AddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Tạo Văn Bản Mới\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() =>{props.setNumberPage(2)}}>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Văn Bản Đến\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() =>{props.setNumberPage(3)}}>\r\n          <ListItemIcon>\r\n            <SendIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Văn Bản Gửi Đi\" />\r\n        </ListItem>\r\n            <ListItem button onClick={() =>{setOpen(!open)}}>\r\n                <ListItemIcon>\r\n                <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Văn Bản Lưu\" />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested}  onClick={() =>{props.setNumberPage(4)}}>\r\n                        <ListItemText primary=\"Văn Bản Gửi\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() =>{props.setNumberPage(5)}}>\r\n                        <ListItemText primary=\"Văn Bản Đến\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        <ListItem button button onClick={() =>{props.setNumberPage(8)}}>\r\n          <ListItemIcon>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Nhóm\" />\r\n        </ListItem>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default VanBanMenu;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\ThemVanBan.js",["156","157","158","159","160"],"import React,{useState,useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport 'date-fns';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport ListDonVi from '../../List/ListDonVi';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport VaiTro from '../NguoiDung/VaiTro';\r\nimport ListNhom from '../../List/ListNhom';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\n\r\nfunction ThemVanBan(props){\r\n    const classes = useStyles();\r\n    //Van Ban\r\n    const [trichYeu,setTrichYeu] = useState('');\r\n    const [soKyHieu,setSoKyHieu] = useState('');\r\n    const [soDen,setSoDen] = useState('');\r\n    const [capDo,setCapDo] = useState('Bình Thường');\r\n    const [baoMat,setBaoMat] = useState('Bình Thường');\r\n    const [linhVucVanBan,setLinhVucVanBan] = useState(1);\r\n    const [loaiVanBan,setLoaiVanBan] = useState(1);\r\n    const [lanhDao,setLanhDao] = useState(); // Chưa sử dụng\r\n    const [file,setFile] = useState();\r\n    const [ngayBanHanh,setNgayBanHanh] = useState(Date.now);\r\n    const [hanXuLy,setHanXuLy] = useState(null);\r\n    const [step,setStep] = useState(0);\r\n    const [listLinhVuc,setListLinhVuc] = useState([]);\r\n    const [listLoai,setListLoai] = useState([]);\r\n    const [nguoiDung] = useState(props.nguoiDung);\r\n    const [listDonVi,setListDonVi] = useState([]);\r\n    const [listPhongBan,setListPhongBan] = useState([]);\r\n    const [listNguoiDung,setListNguoiDung] = useState([]);\r\n    // VanBanGuiNhan\r\n    const [noiDung,setNoiDung] = useState('');\r\n    const [yKienXuLy,setYKienXuLy] = useState('');\r\n    const [trangThai,setTrangThai] = useState('Đang Xử Lý');\r\n    //Nhom\r\n    const [listNhom,setListNhom] = useState([]);\r\n    const [listCTNhom,setListCTNhom] = useState([]);\r\n    //\r\n    const [nhom,setNhom] = useState(false);\r\n\r\n    function getListCheck(nhom){\r\n        if(nhom){\r\n            return <ListNhom \r\n                        listNhom={listNhom}\r\n                        listCTNhom={listCTNhom}\r\n                        listNguoiDung={listNguoiDung}\r\n                        updateNguoiDungCheck={updateNguoiDungCheck}\r\n                        setListNguoiDung={setListNguoiDung}\r\n                    />\r\n        }else{\r\n            return <ListDonVi\r\n                        listDonVi={listDonVi}\r\n                        listPhongBan={listPhongBan}\r\n                        listNguoiDung={listNguoiDung}\r\n                        updateNguoiDungCheck={updateNguoiDungCheck}\r\n                        setListNguoiDung={setListNguoiDung}\r\n                /> \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.nguoiDungDB.find({},function(err,docs){\r\n            const listND = docs.map((item) =>({...item, isCheck : false , vaiTro : \"Xem Để Biết\"}));\r\n            setListNguoiDung(listND);\r\n        })\r\n    },[step])\r\n    \r\n\r\n    /**\r\n     * Đưa dữ liệu từ các NeDB vào const\r\n     */\r\n    useEffect(() => {\r\n        props.linhVucVanBanDB.find({},function(err,docs){\r\n            setListLinhVuc(docs);\r\n        });\r\n        props.loaiVanBanDB.find({},function(err,docs){\r\n            setListLoai(docs);\r\n        });\r\n        props.phongBanDB.findOne({id : nguoiDung.idPhongBan},function(err,docs){\r\n            props.phongBanDB.find({idDonVi : docs.idDonVi},function(err,docs){\r\n                setListPhongBan(docs);\r\n            });\r\n        });\r\n        props.donViDB.find({},function(err,docs){\r\n            setListDonVi(docs);\r\n        }); \r\n        props.nhomDB.find({},function(err,docs){\r\n            setListNhom(docs);\r\n        }); \r\n        props.chiTietNhomDB.find({},function(err,docs){\r\n            setListCTNhom(docs);\r\n        }); \r\n    },[]);\r\n\r\n\r\n    /**\r\n     * Update isCheck của người dung\r\n     * @param {number} id \r\n     */\r\n    function updateNguoiDungCheck(id){\r\n        const updateList = listNguoiDung.map(item => {\r\n            if (item.id === id) {\r\n                return {...item,isCheck :!item.isCheck}\r\n            }\r\n            return item;\r\n        })\r\n        setListNguoiDung(updateList);\r\n    }\r\n\r\n    /**\r\n     * Cập nhật vai trò người dùng\r\n     * @param {number} id \r\n     * @param {String} vaiTro \r\n     */\r\n    function updateVaiTroNguoiDung(id,vaiTro){\r\n        const updateList = listNguoiDung.map(item => {\r\n            if (item.id === id) {\r\n                return {...item,vaiTro : vaiTro}\r\n            }\r\n            return item;\r\n        })\r\n        setListNguoiDung(updateList);\r\n    }\r\n\r\n\r\n    /**\r\n     * Hàm lưu văn bản sử dụng API : \"http://localhost:3000/vanban/themVanBan\" \r\n     * Lưu văn bản lên sever\r\n     */\r\n    function luuVanBan(){\r\n        const api = process.env.REACT_APP_API+\"vanban/themVanBan\";\r\n        const requestOptions ={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \r\n                trichYeu : trichYeu,\r\n                ngayBanHanh : ngayBanHanh,\r\n                soKyHieu : soKyHieu,\r\n                capDo : capDo,\r\n                baoMat : baoMat,\r\n                soDen : soDen,\r\n                hanXuLy : hanXuLy,\r\n                trangThai : \"Đã Duyệt\",\r\n                file : file,\r\n                idLanhDao : nguoiDung.id,\r\n                idLoaiVanBan : loaiVanBan,\r\n                idLinhVucVanBan: linhVucVanBan,\r\n                idNguoiTao : nguoiDung.id\r\n             })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            props.setNguoiDung(data);\r\n            alert(\"Lưu văn bản thành công\");\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với server thất bại\")\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Hàm tạo văn bản \"http://localhost:9999/vanban/themVanBan\"\r\n     * Tạo văn bản gửi nhận  \"http://localhost:9999/vanbanguinhan/themVanBanGuiNhan\"\r\n     * Tạo chi tiết văn bản gửi nhận theo người dùng được chọn trong danh sách \r\n     * \"http://localhost:9999/chiTietVanBanGuiNhan/themChiTietVanBanGuiNhan\"\r\n     */\r\n    function taoVanBanVaGui(){\r\n        const api = process.env.REACT_APP_API+\"vanban/themVanBan\";\r\n        const requestOptions ={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \r\n                trichYeu : trichYeu,\r\n                ngayBanHanh : ngayBanHanh,\r\n                soKyHieu : soKyHieu,\r\n                capDo : capDo,\r\n                baoMat : baoMat,\r\n                soDen : soDen,\r\n                hanXuLy : hanXuLy,\r\n                trangThai : \"Đã Duyệt\",\r\n                file : file,\r\n                idLanhDao : nguoiDung.id,\r\n                idLoaiVanBan : loaiVanBan,\r\n                idLinhVucVanBan: linhVucVanBan,\r\n                idNguoiTao : nguoiDung.id\r\n             })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const apiVanBanGuiNhan = process.env.REACT_APP_API+\"vanbanguinhan/themVanBanGuiNhan\";\r\n            const requestOptions ={\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ \r\n                    idNguoiGui : nguoiDung.id,\r\n                    idVanBan : data.id,\r\n                    trangThai : trangThai,\r\n                    noiDung : noiDung,\r\n                    yKienXuLy : yKienXuLy\r\n                 })\r\n            };\r\n            fetch(apiVanBanGuiNhan,requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                listNguoiDung.filter(item => item.isCheck === true)\r\n                .map((nguoiDung) =>{\r\n                    const apiGuiVanBan = process.env.REACT_APP_API+\"chiTietVanBanGuiNhan/themChiTietVanBanGuiNhan\";\r\n                    const requestOptions ={\r\n                        method: \"POST\",\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ \r\n                            idNguoiNhan : nguoiDung.id,\r\n                            idVanBanGuiNhan :data.id,\r\n                            vaiTro : nguoiDung.vaiTro\r\n                        })\r\n                    };\r\n                    fetch(apiGuiVanBan,requestOptions)\r\n                    .then(data => {\r\n\r\n                    }).catch(err=>{\r\n                        alert(\"Kết nối với sever thất bại\")\r\n                    })\r\n                });\r\n                alert(\"Gửi thành công !\");\r\n                props.onChangeVanBan();\r\n                props.setNumberPage(0);\r\n            }).catch(err=>{\r\n                alert(\"Kết nối với server thất bại\")\r\n            })\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với server thất bại\")\r\n        })\r\n    }\r\n\r\n    // function getListLanhDao(){\r\n    //     listNguoiDung.filter()\r\n    // }\r\n\r\n\r\n    /**\r\n     * Xuất màn hình theo step\r\n     * màn hình 1 : nhập thông tin văn bản\r\n     * màn hình 2 : chọn người gửi văn bản hoặc nhóm\r\n     */\r\n    if(step===0){\r\n        return(\r\n            <div>\r\n                <Grid container justify=\"center\" spacing={4} >\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                            label=\"Trích Yếu\"\r\n                            multiline\r\n                            fullWidth\r\n                            rows={3}\r\n                            value={trichYeu}\r\n                            onChange={(e) => {setTrichYeu(e.target.value)}}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            label=\"Số Ký Hiệu\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={soKyHieu}\r\n                            onChange={(e) =>{setSoKyHieu(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n    \r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            label=\"Số Đi\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={soDen}\r\n                            onChange={(e) =>{setSoDen(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <Grid item xs={12} sm={3}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    label=\"Ngày Ban Hành\"\r\n                                    value={ngayBanHanh}\r\n                                    onChange={(date)=>{setNgayBanHanh(date)}}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                        \r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    label=\"Hạn Xử Lý\"\r\n                                    value={hanXuLy}\r\n                                    onChange={(date) => {setHanXuLy(date)}}\r\n                                    KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        \r\n                        </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                    \r\n                    <Grid item xs={12} sm={3}>\r\n                        <InputLabel >Cấp Độ</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            label=\"Cấp Độ\"\r\n                            value={capDo}\r\n                            onChange={(e)=>{setCapDo(e.target.value)}}\r\n                            >\r\n                            <MenuItem value={\"Bình Thường\"}>Bình Thường</MenuItem>\r\n                            <MenuItem value={\"Khẩn\"}>Khẩn</MenuItem>\r\n                            <MenuItem value={\"Hỏa Tốc\"}>Hỏa Tốc</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <InputLabel >Bảo mật</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            label=\"Bảo mật\"\r\n                            value={baoMat}\r\n                            onChange={(e)=>setBaoMat(e.target.value)}\r\n                            >\r\n                            <MenuItem value={\"Bình Thường\"}>Bình Thường</MenuItem>\r\n                            <MenuItem value={\"Cao\"}>Cao</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <InputLabel >Lĩnh Vực Văn Bản</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value={linhVucVanBan}\r\n                            onChange={(e)=> {setLinhVucVanBan(e.target.value)}}\r\n                            >\r\n                            {listLinhVuc.map((item) =>(\r\n                                <MenuItem value={item.id}>{item.tenLinhVucVanBan}</MenuItem>\r\n                            )\r\n                            )}\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <InputLabel >Loại Văn Bản</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value = {loaiVanBan}\r\n                            onChange={(e)=>{setLoaiVanBan(e.target.value)}}\r\n                            >\r\n                            {listLoai.map((item) =>(\r\n                                <MenuItem value={item.id}>{item.tenLoaiVanBan}</MenuItem>\r\n                            )\r\n                            )}\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <input\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            value={file}\r\n                            onChange={(e)=>{setFile(e.target.value)}}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload File\r\n                            </Button>\r\n                        </label>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n    \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n    \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <InputLabel >Lãnh Đạo</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n\r\n                            >\r\n                            <MenuItem value={10}>Ten</MenuItem>\r\n                            <MenuItem value={20}>Twenty</MenuItem>\r\n                            <MenuItem value={30}>Thirty</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={5}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() =>{luuVanBan()}}>\r\n                            Lưu\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {setStep(step+1)}}>\r\n                            Gửi\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {setStep(step+1);setNhom(true)}}>\r\n                            Gửi Nhóm\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"inherit\" onClick={() => {props.setNumberPage(0)}}>\r\n                            Đóng\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>\r\n                <Grid container justify=\"center\" spacing={4} >\r\n                   <Grid item sm={5}>\r\n                        {getListCheck(nhom)}\r\n                   </Grid>\r\n                   <Grid item sm={7}>\r\n                        <Grid container justify=\"center\" spacing={2} sm={12}>\r\n                            <Grid item sm={12} >\r\n                                <TextField\r\n                                    label=\"Nội Dung\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    rows={3}\r\n                                    value={noiDung}\r\n                                    onChange={(e) => {setNoiDung(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={12} >\r\n                                <TextField\r\n                                    label=\"Ý Kiến Xử Lý\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    rows={3}\r\n                                    value={yKienXuLy}\r\n                                    onChange={(e) => {setYKienXuLy(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={12}>\r\n                                <FormControl>\r\n                                    <FormLabel >Trạng thái xử lý :</FormLabel>\r\n                                    <RadioGroup value={trangThai} onChange={(e)=>{setTrangThai(e.target.value)}}>\r\n                                        <FormControlLabel value=\"Đang Xử Lý\" control={<Radio />} label=\"Đang Xử Lý\" />\r\n                                        <FormControlLabel value=\"Đã Hoàn Tất\" control={<Radio />} label=\"Đã hoàn tất\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Divider/>\r\n                            <Grid item sm={6} >\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => {setStep(0);setNhom(false)}}>\r\n                                    Trở Về\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {taoVanBanVaGui()}}>\r\n                                    Gửi\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"inherit\" onClick={() => {props.setNumberPage(0)}}>\r\n                                    Đóng\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item sm={12}>\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <StyledTableCell size=\"small\">STT</StyledTableCell>\r\n                                                <StyledTableCell >Tên Nhân Viên</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Vai trò</StyledTableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {listNguoiDung.filter(item => item.isCheck === true).map((row,index) => (\r\n                                                <StyledTableRow>\r\n                                                    <StyledTableCell>{index+1}</StyledTableCell>\r\n                                                    <StyledTableCell>{row.tenNguoiDung}</StyledTableCell>\r\n                                                    <StyledTableCell align=\"center\">\r\n                                                        <VaiTro\r\n                                                            vaiTro={row.vaiTro}\r\n                                                            updateVaiTroNguoiDung={updateVaiTroNguoiDung}\r\n                                                        />\r\n                                                    </StyledTableCell>\r\n                                                </StyledTableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                        </Grid>\r\n                   </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemVanBan;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanGui.js",["161","162"],"import React,{useState,useEffect} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListVanBanGui from '../../List/ListVanBanGui';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\n\r\n\r\n/**\r\n * Hàm xuất form input theo tùy chọn người dùng\r\n * @param {number} select \r\n * @param {function} setTimKiem \r\n * @param {array} listLinhVuc \r\n * @param {array} listLoai \r\n */\r\nfunction getTimKiem(select,setTimKiem,listLinhVuc=[],listLoai=[]){\r\n    switch(select){\r\n        case 1 :\r\n            return (\r\n                <TextField\r\n                        label=\"Trích Yếu\"\r\n                        multiline\r\n                        fullWidth\r\n                        onChange={(e) => {setTimKiem(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                />\r\n            )\r\n        case 2 :\r\n            return (\r\n                <TextField\r\n                    label=\"Số Ký Hiệu\"\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={(e) => {setTimKiem(e.target.value)}}\r\n                    variant=\"outlined\"\r\n                />\r\n            )\r\n        case 3 :\r\n            return (\r\n                <TextField\r\n                    label=\"Số Đi\"\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={(e) => {setTimKiem(e.target.value)}}\r\n                    variant=\"outlined\"\r\n                />\r\n            )\r\n        case 4 : \r\n            return (\r\n                <div>\r\n                    <InputLabel >Cấp Độ</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        <MenuItem value={\"Bình Thường\"}>Bình Thường</MenuItem>\r\n                        <MenuItem value={\"Khẩn\"}>Khẩn</MenuItem>\r\n                        <MenuItem value={\"Hỏa Tốc\"}>Hỏa Tốc</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            )\r\n        case 5 :\r\n            return(\r\n                <div>\r\n                    <InputLabel >Lĩnh Vực</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        {listLinhVuc.map((item) =>(\r\n                                <MenuItem value={item.id}>{item.tenLinhVucVanBan}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )\r\n        case 6 :\r\n            return(\r\n                <div>\r\n                    <InputLabel >Lĩnh Vực</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        {listLoai.map((item) =>(\r\n                            <MenuItem value={item.id}>{item.tenLoaiVanBan}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div>\r\n                    <InputLabel >Trạng Thái</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        <MenuItem value={\"Đã Duyệt\"}>Đã Duyệt</MenuItem>\r\n                        <MenuItem value={\"Chưa Duyệt\"}>Chưa Duyệt</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nfunction VanBanGui(props){\r\n    const [listVanBanGui,setListVanBanGui] = useState([]);\r\n    const [listVanBan,setListVanBan] = useState([]);\r\n    const [timKiem,setTimKiem] = useState('');\r\n    const [loaiTimKiem,setLoaiTimKiem] = useState(0);\r\n    const [listLinhVuc,setListLinhVuc] = useState([]);\r\n    const [listLoai,setListLoai] = useState([]);\r\n    const [open,setOpen] = useState(false);\r\n    const [vanBan,setVanBan] = useState();\r\n    const [vanBanGui,setVanBanGui] = useState();\r\n    const [loaiVanBan,setLoaiVanBan] = useState();\r\n    const [linhVuc,setLinhVuc] = useState();\r\n    const [lanhDao,setLanhDao] = useState();\r\n    const [listVanBanLuu,setListVanBanLuu] = useState([]);\r\n    const [check,setCheck] = useState(false);\r\n    const [idVanBanLuu,setIdVanBanLuu] = useState();\r\n    const [openDialog,setOpenDialog] = useState(false);\r\n    const [nguoiDung] = useState(props.nguoiDung);\r\n    const [ghiChu,setGhiChu] = useState(\"\");\r\n\r\n    /**\r\n     * Đưa dữ liệu từ NeDB vào\r\n     */\r\n    useEffect(() => {\r\n        props.vanBanDB.find({},function(err,docs){\r\n            setListVanBan(docs);\r\n        });\r\n        props.vanBanGuiDB.find({},function(err,docs){\r\n            setListVanBanGui(docs);\r\n        });\r\n        props.linhVucVanBanDB.find({},function(err,docs){\r\n            setListLinhVuc(docs);\r\n        });\r\n        props.loaiVanBanDB.find({},function(err,docs){\r\n            setListLoai(docs);\r\n        });\r\n        props.vanBanLuuDB.find({},function(err,docs){\r\n            setListVanBanLuu(docs);\r\n        });\r\n    },[]);\r\n\r\n    /**\r\n     * Hàm lấy tên Lĩnh Vực Văn Bản theo ID\r\n     * @param {number} idLinhVuc \r\n     */\r\n    function getLinhVuc(idLinhVuc){\r\n        props.linhVucVanBanDB.findOne({id : idLinhVuc},function(err,docs){\r\n            setLinhVuc(docs.tenLinhVucVanBan);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hàm lấy tên loại văn bản theo ID\r\n     * @param {number} idLoaiVanBan \r\n     */\r\n    function getLoaiVanBan(idLoaiVanBan){\r\n        props.loaiVanBanDB.findOne({id : idLoaiVanBan},function(err,docs){\r\n            setLoaiVanBan(docs.tenLoaiVanBan);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hàm lấy tên Lãnh Đạo theo ID\r\n     * @param {number} idLanhDao \r\n     */\r\n    function getLanhDao(idLanhDao){\r\n        props.nguoiDungDB.findOne({id : idLanhDao},function(err,docs){\r\n            setLanhDao(docs.tenNguoiDung);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hàm xuất list văn bản theo tùy chọn người dùng\r\n     * @param {number} loaiTimKiem \r\n     * @param {String} timKiem \r\n     * @param {function} setListVanBan \r\n     */\r\n    function getList(loaiTimKiem,timKiem,setListVanBan){\r\n        if(loaiTimKiem===0){\r\n            props.vanBanDB.find({trangThai : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }else if(loaiTimKiem===1){\r\n            props.vanBanDB.find({trichYeu : new RegExp(timKiem)},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }else if(loaiTimKiem===2){\r\n            props.vanBanDB.find({soKyHieu : new RegExp(timKiem)},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===3){\r\n            props.vanBanDB.find({soDen : new RegExp(timKiem)},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===4){\r\n            props.vanBanDB.find({capDo : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===5){\r\n            props.vanBanDB.find({idLinhVucVanBan : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===6){\r\n            props.vanBanDB.find({idLoaiVanBan : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }else{\r\n            props.vanBanDB.find({},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n    }\r\n\r\n    function checkSave(idVanBanGuiNhan){\r\n        setCheck(false);\r\n        listVanBanLuu.map(item => {\r\n            if(item.idVanBanGuiNhan === idVanBanGuiNhan){\r\n                setCheck(true);\r\n                setIdVanBanLuu(item.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    function onCheckStar(){\r\n        if(check === true){\r\n            setCheck(false);\r\n            deleteVanBanLuu(idVanBanLuu);\r\n        }else{\r\n            setOpenDialog(true);\r\n        }\r\n    }\r\n\r\n    function deleteVanBanLuu(idVanBanLuu){\r\n        const api = process.env.REACT_APP_API+\"vanbanluu/xoaVanBanLuu/\"+idVanBanLuu;\r\n        const requestOptions = {\r\n            method: \"DELETE\"\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            alert(\"Xóa văn bản thành công\");\r\n            props.onChangeVanBan();\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với server thất bại\");\r\n        });\r\n    }\r\n\r\n    function saveVanBanGuiNhan(idVanBanGuiNhan){\r\n        const api = process.env.REACT_APP_API+\"vanbanluu/themVanBanLuu\";\r\n        const requestOptions ={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                idNguoiDung : nguoiDung.id,\r\n                idVanBanGuiNhan : idVanBanGuiNhan,\r\n                ghiChu : ghiChu,\r\n                loaiVanBanLuu : \"Văn Bản Gửi\"\r\n            })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            alert(\"Lưu văn bản thành công\");\r\n            props.onChangeVanBan();\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với server thất bại\");\r\n        });\r\n    }\r\n\r\n    if(open)\r\n        return(\r\n            <div>\r\n                <Dialog open={openDialog} onClose={()=>{setOpenDialog(false);setGhiChu(\"\")}}>\r\n                    <DialogContent>\r\n                        <TextField \r\n                            label=\"Ghi Chú\"\r\n                            value={ghiChu}\r\n                            onChange={(e)=>{setGhiChu(e.target.value)}}\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setOpenDialog(false);}}>Hủy</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>{setOpenDialog(false);setCheck(true);saveVanBanGuiNhan(vanBanGui.id);}}>Lưu</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    <Grid item sm={10}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            Thông Tin Văn Bản\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={2}>\r\n                        <Checkbox checked={check} onChange={() => {onCheckStar();}} icon={<StarOutlinedIcon/>} checkedIcon={<StarOutlinedIcon/>}/>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Trích Yếu : {vanBan.trichYeu}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Số Đi : {vanBan.soDen}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Số Ký Hiệu : {vanBan.soKyHieu}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Cấp Độ : {vanBan.capDo}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Bảo Mật : {vanBan.baoMat}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Ngày Ban Hành : {vanBan.ngayBanHanh}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Hạn Xử Lý : {vanBan.hanXuLy}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Loại Văn Bản : {loaiVanBan}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Lĩnh Vực : {linhVuc}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Lãnh Đạo : {lanhDao}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Ngày Gửi : {vanBanGui.ngayGui}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Trạng Thái : {vanBanGui.trangThai}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Button variant=\"contained\" color=\"primary\">Xem File</Button>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Nội Dung : {vanBanGui.noiDung}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Ý Kiến Xử Lý : {vanBanGui.yKienXuLy}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() =>{setOpen(false)}}>\r\n                            Trở Về\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" >\r\n                            Chuyển tiếp\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    else\r\n        return(\r\n            <div>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    <Grid container justify=\"center\" spacing={1} sm={12}>\r\n                        <Grid item sm={2}>\r\n                            <InputLabel >Tìm Kiếm</InputLabel>\r\n                            <Select\r\n                                fullWidth\r\n                                label=\"Loại Tìm Kiếm\"\r\n                                value={loaiTimKiem}\r\n                                onChange={(e)=>setLoaiTimKiem(e.target.value)}\r\n                                >\r\n                                <MenuItem value={0}>Trạng Thái</MenuItem>\r\n                                <MenuItem value={1}>Trích Yếu</MenuItem>\r\n                                <MenuItem value={3}>Số Đi</MenuItem>\r\n                                <MenuItem value={2}>Số Ký Hiệu</MenuItem>\r\n                                <MenuItem value={4}>Cấp Độ</MenuItem>\r\n                                <MenuItem value={5}>Lĩnh Vực</MenuItem>\r\n                                <MenuItem value={6}>Loại Văn Bản</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            {getTimKiem(loaiTimKiem,setTimKiem,listLinhVuc,listLoai)}\r\n                        </Grid>\r\n                        <Grid item sm={2} >\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={() =>{getList(loaiTimKiem,timKiem,setListVanBan)}}>\r\n                                Tìm Kiếm\r\n                            </Button>\r\n                            <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={() =>{getList(-1,timKiem,setListVanBan)}}>\r\n                                Xem Tất Cả\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid item sm={12}>\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <StyledTableRow>\r\n                                        <StyledTableCell size=\"small\" align=\"left\">STT</StyledTableCell>\r\n                                        <StyledTableCell align=\"left\">Trích Yếu</StyledTableCell>\r\n                                        <StyledTableCell size=\"small\" align=\"center\">Số Đi</StyledTableCell>\r\n                                        <StyledTableCell size=\"small\" align=\"center\">Số Ký Hiệu</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Trạng Thái</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                </TableHead>\r\n                                <ListVanBanGui\r\n                                    listVanBan={listVanBan}\r\n                                    listVanBanGui={listVanBanGui}\r\n                                    setOpen={setOpen}\r\n                                    setVanBan={setVanBan}\r\n                                    setVanBanGui={setVanBanGui}\r\n                                    getLanhDao={getLanhDao}\r\n                                    getLinhVuc={getLinhVuc}\r\n                                    getLoaiVanBan={getLoaiVanBan}\r\n                                    checkSave={checkSave}\r\n                                />\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default VanBanGui;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanDen.js",["163","164","165","166"],"import React,{useState,useEffect} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListNhom from '../../List/ListNhom';\r\nimport ListDonVi from '../../List/ListDonVi';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport VaiTro from '../NguoiDung/VaiTro';\r\nimport ListVanBanDen from '../../List/ListVanBanDen';\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\n\r\n/**\r\n * Hàm xuất form input theo tùy chọn người dùng\r\n * @param {number} select \r\n * @param {function} setTimKiem \r\n * @param {array} listLinhVuc \r\n * @param {array} listLoai \r\n */\r\nfunction getTimKiem(select,setTimKiem,listLinhVuc=[],listLoai=[]){\r\n    switch(select){\r\n        case 1 :\r\n            return (\r\n                <TextField\r\n                        label=\"Trích Yếu\"\r\n                        multiline\r\n                        fullWidth\r\n                        onChange={(e) => {setTimKiem(e.target.value)}}\r\n                        variant=\"outlined\"\r\n                />\r\n            )\r\n        case 2 :\r\n            return (\r\n                <TextField\r\n                    label=\"Số Ký Hiệu\"\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={(e) => {setTimKiem(e.target.value)}}\r\n                    variant=\"outlined\"\r\n                />\r\n            )\r\n        case 3 :\r\n            return (\r\n                <TextField\r\n                    label=\"Số Đi\"\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={(e) => {setTimKiem(e.target.value)}}\r\n                    variant=\"outlined\"\r\n                />\r\n            )\r\n        case 4 : \r\n            return (\r\n                <div>\r\n                    <InputLabel >Cấp Độ</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        <MenuItem value={\"Bình Thường\"}>Bình Thường</MenuItem>\r\n                        <MenuItem value={\"Khẩn\"}>Khẩn</MenuItem>\r\n                        <MenuItem value={\"Hỏa Tốc\"}>Hỏa Tốc</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            )\r\n        case 5 :\r\n            return(\r\n                <div>\r\n                    <InputLabel >Lĩnh Vực</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        {listLinhVuc.map((item) =>(\r\n                                <MenuItem value={item.id}>{item.tenLinhVucVanBan}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )\r\n        case 6 :\r\n            return(\r\n                <div>\r\n                    <InputLabel >Lĩnh Vực</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        {listLoai.map((item) =>(\r\n                            <MenuItem value={item.id}>{item.tenLoaiVanBan}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div>\r\n                    <InputLabel >Trạng Thái</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={(e)=>{setTimKiem(e.target.value)}}\r\n                        >\r\n                        <MenuItem value={\"Đã Duyệt\"}>Đã Duyệt</MenuItem>\r\n                        <MenuItem value={\"Chưa Duyệt\"}>Chưa Duyệt</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nfunction VanBanDen(props){\r\n    const [listVanBanDen,setListVanBanDen] = useState([]);\r\n    const [listVanBan,setListVanBan] = useState([]);\r\n    const [timKiem,setTimKiem] = useState('');\r\n    const [loaiTimKiem,setLoaiTimKiem] = useState(0);\r\n    const [listLinhVuc,setListLinhVuc] = useState([]);\r\n    const [listLoai,setListLoai] = useState([]);\r\n    const [open,setOpen] = useState(false);\r\n    const [vanBan,setVanBan] = useState();\r\n    const [vanBanGui,setVanBanGui] = useState();\r\n    const [loaiVanBan,setLoaiVanBan] = useState();\r\n    const [linhVuc,setLinhVuc] = useState();\r\n    const [lanhDao,setLanhDao] = useState();\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [listVanBanLuu,setListVanBanLuu] = useState([]);\r\n    const [check,setCheck] = useState(false);\r\n    const [idVanBanLuu,setIdVanBanLuu] = useState();\r\n    const [openDialog,setOpenDialog] = useState(false);\r\n    const [nguoiDung] = useState(props.nguoiDung);\r\n    const [ghiChu,setGhiChu] = useState(\"\");\r\n    /// Chuyển Tiếp\r\n    const [noiDung,setNoiDung] = useState('');\r\n    const [yKienXuLy,setYKienXuLy] = useState('');\r\n    const [trangThai,setTrangThai] = useState('Đang Xử Lý');\r\n    const [listNhom,setListNhom] = useState([]);\r\n    const [listCTNhom,setListCTNhom] = useState([]);\r\n    const [listDonVi,setListDonVi] = useState([]);\r\n    const [listPhongBan,setListPhongBan] = useState([]);\r\n    const [listNguoiDung,setListNguoiDung] = useState([]);\r\n    const [step,setStep] = useState(0);\r\n    const [nhom,setNhom] = useState(false);\r\n\r\n    \r\n\r\n    /**\r\n     * Đưa dữ liệu từ NeDB vào\r\n     */\r\n    useEffect(() => {\r\n        props.vanBanDB.find({},function(err,docs){\r\n            setListVanBan(docs);\r\n        });\r\n        props.vanBanDenDB.find({},function(err,docs){\r\n            setListVanBanDen(docs);\r\n        });\r\n        props.linhVucVanBanDB.find({},function(err,docs){\r\n            setListLinhVuc(docs);\r\n        });\r\n        props.loaiVanBanDB.find({},function(err,docs){\r\n            setListLoai(docs);\r\n        });\r\n        props.vanBanLuuDB.find({},function(err,docs){\r\n            setListVanBanLuu(docs);\r\n        });\r\n        props.phongBanDB.findOne({id : nguoiDung.idPhongBan},function(err,docs){\r\n            props.phongBanDB.find({idDonVi : docs.idDonVi},function(err,docs){\r\n                setListPhongBan(docs);\r\n            });\r\n        });\r\n        props.donViDB.find({},function(err,docs){\r\n            setListDonVi(docs);\r\n        }); \r\n        props.nhomDB.find({},function(err,docs){\r\n            setListNhom(docs);\r\n        }); \r\n        props.chiTietNhomDB.find({},function(err,docs){\r\n            setListCTNhom(docs);\r\n        }); \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        props.nguoiDungDB.find({},function(err,docs){\r\n            const listND = docs.map((item) =>({...item, isCheck : false , vaiTro : \"Xem Để Biết\"}));\r\n            setListNguoiDung(listND);\r\n        })\r\n    },[]);\r\n\r\n    function updateNguoiDungCheck(id){\r\n        const updateList = listNguoiDung.map(item => {\r\n            if (item.id === id) {\r\n                return {...item,isCheck :!item.isCheck}\r\n            }\r\n            return item;\r\n        })\r\n        setListNguoiDung(updateList);\r\n    }\r\n\r\n    function updateVaiTroNguoiDung(id,vaiTro){\r\n        const updateList = listNguoiDung.map(item => {\r\n            if (item.id === id) {\r\n                return {...item,vaiTro : vaiTro}\r\n            }\r\n            return item;\r\n        })\r\n        setListNguoiDung(updateList);\r\n    }\r\n\r\n     /**\r\n     * Hàm lấy tên Lĩnh Vực Văn Bản theo ID\r\n     * @param {number} idLinhVuc \r\n     */\r\n    function getLinhVuc(idLinhVuc){\r\n        props.linhVucVanBanDB.findOne({id : idLinhVuc},function(err,docs){\r\n            setLinhVuc(docs.tenLinhVucVanBan);\r\n        });\r\n    }\r\n\r\n    function getListCheck(nhom){\r\n        if(nhom){\r\n            return <ListNhom \r\n                        listNhom={listNhom}\r\n                        listCTNhom={listCTNhom}\r\n                        listNguoiDung={listNguoiDung}\r\n                        updateNguoiDungCheck={updateNguoiDungCheck}\r\n                        setListNguoiDung={setListNguoiDung}\r\n                    />\r\n        }else{\r\n            return <ListDonVi\r\n                        listDonVi={listDonVi}\r\n                        listPhongBan={listPhongBan}\r\n                        listNguoiDung={listNguoiDung}\r\n                        updateNguoiDungCheck={updateNguoiDungCheck}\r\n                        setListNguoiDung={setListNguoiDung}\r\n                /> \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hàm lấy tên loại văn bản theo ID\r\n     * @param {number} idLoaiVanBan \r\n     */\r\n    function getLoaiVanBan(idLoaiVanBan){\r\n        props.loaiVanBanDB.findOne({id : idLoaiVanBan},function(err,docs){\r\n            setLoaiVanBan(docs.tenLoaiVanBan);\r\n        });\r\n    }\r\n\r\n    function getVanBan(step){\r\n        if(step===0)\r\n            return <Grid container justify=\"center\" spacing={2}>\r\n                        <Dialog open={openDialog} onClose={()=>{setOpenDialog(false);setGhiChu(\"\")}}>\r\n                            <DialogContent>\r\n                                <TextField \r\n                                    label=\"Ghi Chú\"\r\n                                    value={ghiChu}\r\n                                    onChange={(e)=>{setGhiChu(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setOpenDialog(false);}}>Hủy</Button>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={()=>{setOpenDialog(false);setCheck(true);saveVanBanGuiNhan(vanBanGui.id);}}>Lưu</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    <Grid item sm={10}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            Thông Tin Văn Bản\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={2}>\r\n                        <Checkbox checked={check} onChange={() => {onCheckStar();}} icon={<StarOutlinedIcon/>} checkedIcon={<StarOutlinedIcon/>}/>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Trích Yếu : {vanBan.trichYeu}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Số Đi : {vanBan.soDen}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Số Ký Hiệu : {vanBan.soKyHieu}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Cấp Độ : {vanBan.capDo}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Bảo Mật : {vanBan.baoMat}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Ngày Ban Hành : {vanBan.ngayBanHanh}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Hạn Xử Lý : {vanBan.hanXuLy}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Loại Văn Bản : {loaiVanBan}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Lĩnh Vực : {linhVuc}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Lãnh Đạo : {lanhDao}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Ngày Gửi : {vanBanGui.ngayGui}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Trạng Thái : {vanBanGui.trangThai}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Button variant=\"contained\" color=\"primary\">Xem File</Button>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Nội Dung : {vanBanGui.noiDung}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                            Ý Kiến Xử Lý : {vanBanGui.yKienXuLy}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() =>{setOpen(false)}}>\r\n                            Trở Về\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>{setStep(step+1);setNhom(false)}}>\r\n                            Chuyển Tiếp\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>{setStep(step+1);setNhom(true)}}>\r\n                            Chuyển Nhóm\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={10}>\r\n                    <Document\r\n                        file={vanBan.file}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                    >\r\n                        <Page pageNumber={pageNumber} />\r\n                    </Document>\r\n                    \r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <p>Page {pageNumber} of {numPages}</p>\r\n                        <Button variant=\"contained\" color=\"secondary\"onClick={()=>{setPageNumber(pageNumber-1)}}>Prev</Button>\r\n                        <Button variant=\"contained\" color=\"primary\"onClick={()=>{setPageNumber(pageNumber+1)}}>Next</Button>\r\n                    </Grid>\r\n                </Grid>\r\n        else\r\n            return <Grid container justify=\"center\" spacing={4} >\r\n                   <Grid item sm={5}>\r\n                        {getListCheck(nhom)}\r\n                   </Grid>\r\n                   <Grid item sm={7}>\r\n                        <Grid container justify=\"center\" spacing={2} sm={12}>\r\n                            <Grid item sm={12} >\r\n                                <TextField\r\n                                    label=\"Nội Dung\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    rows={3}\r\n                                    value={noiDung}\r\n                                    onChange={(e) => {setNoiDung(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={12} >\r\n                                <TextField\r\n                                    label=\"Ý Kiến Xử Lý\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    rows={3}\r\n                                    value={yKienXuLy}\r\n                                    onChange={(e) => {setYKienXuLy(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={12}>\r\n                                <FormControl>\r\n                                    <FormLabel >Trạng thái xử lý :</FormLabel>\r\n                                    <RadioGroup value={trangThai} onChange={(e)=>{setTrangThai(e.target.value)}}>\r\n                                        <FormControlLabel value=\"Đang Xử Lý\" control={<Radio />} label=\"Đang Xử Lý\" />\r\n                                        <FormControlLabel value=\"Đã Hoàn Tất\" control={<Radio />} label=\"Đã hoàn tất\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Divider/>\r\n                            <Grid item sm={6} >\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => {setStep(0);setNhom(false)}}>\r\n                                    Trở Về\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {guiVanBan()}}>\r\n                                    Gửi\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"inherit\" onClick={() => {props.setNumberPage(0)}}>\r\n                                    Đóng\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item sm={12}>\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <StyledTableCell size=\"small\">STT</StyledTableCell>\r\n                                                <StyledTableCell >Tên Nhân Viên</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Vai trò</StyledTableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {listNguoiDung.filter(item => item.isCheck === true).map((row,index) => (\r\n                                                <StyledTableRow>\r\n                                                    <StyledTableCell>{index+1}</StyledTableCell>\r\n                                                    <StyledTableCell>{row.tenNguoiDung}</StyledTableCell>\r\n                                                    <StyledTableCell align=\"center\">\r\n                                                        <VaiTro\r\n                                                            vaiTro={row.vaiTro}\r\n                                                            updateVaiTroNguoiDung={updateVaiTroNguoiDung}\r\n                                                        />\r\n                                                    </StyledTableCell>\r\n                                                </StyledTableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                        </Grid>\r\n                   </Grid>\r\n                </Grid>\r\n    }\r\n    /**\r\n     * Hàm lấy tên Lãnh Đạo theo ID\r\n     * @param {number} idLanhDao \r\n     */\r\n    function getLanhDao(idLanhDao){\r\n        props.nguoiDungDB.findOne({id : idLanhDao},function(err,docs){\r\n            setLanhDao(docs.tenNguoiDung);\r\n        });\r\n    }\r\n\r\n    function guiVanBan(){\r\n        const api = process.env.REACT_APP_API+\"vanbanguinhan/themVanBanGuiNhan\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                idNguoiGui : nguoiDung.id,\r\n                idVanBan : vanBan.id,\r\n                trangThai : trangThai,\r\n                noiDung : noiDung,\r\n                yKienXuLy : yKienXuLy\r\n            })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n            .then(data => {\r\n                listNguoiDung.filter(item => item.isCheck === true)\r\n                .map((nguoiDung) =>{\r\n                    const apiGuiVanBan = process.env.REACT_APP_API+\"chiTietVanBanGuiNhan/themChiTietVanBanGuiNhan\";\r\n                    const requestOptions ={\r\n                        method: \"POST\",\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ \r\n                            idNguoiNhan : nguoiDung.id,\r\n                            idVanBanGuiNhan :data.id,\r\n                            vaiTro : nguoiDung.vaiTro\r\n                        })\r\n                    };\r\n                    fetch(apiGuiVanBan,requestOptions)\r\n                    .then(data => {\r\n\r\n                    }).catch(err=>{\r\n                        alert(\"Kết nối với sever thất bại\")\r\n                    })\r\n                });\r\n                alert(\"Gửi thành công !\");\r\n                props.onChangeVanBan();\r\n                props.setNumberPage(0);\r\n            }).catch(err=>{\r\n                alert(\"Kết nối với server thất bại\")\r\n            });\r\n    }\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    /**\r\n     * Hàm xuất list văn bản theo tùy chọn người dùng\r\n     * @param {number} loaiTimKiem \r\n     * @param {String} timKiem \r\n     * @param {function} setListVanBan \r\n     */\r\n    function getList(loaiTimKiem,timKiem,setListVanBan){\r\n        if(loaiTimKiem===0){\r\n            props.vanBanDB.find({trangThai : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }else if(loaiTimKiem===1){\r\n            props.vanBanDB.find({trichYeu : new RegExp(timKiem)},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }else if(loaiTimKiem===2){\r\n            props.vanBanDB.find({soKyHieu : new RegExp(timKiem)},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===3){\r\n            props.vanBanDB.find({soDen : new RegExp(timKiem)},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===4){\r\n            props.vanBanDB.find({capDo : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===5){\r\n            props.vanBanDB.find({idLinhVucVanBan : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n        else if(loaiTimKiem===6){\r\n            props.vanBanDB.find({idLoaiVanBan : timKiem},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }else{\r\n            props.vanBanDB.find({},function(err,docs){\r\n                setListVanBan(docs);\r\n            });\r\n        }\r\n    }\r\n\r\n    function checkSave(idVanBanGuiNhan){\r\n        setCheck(false);\r\n        listVanBanLuu.map(item => {\r\n            if(item.idVanBanGuiNhan === idVanBanGuiNhan){\r\n                setCheck(true);\r\n                setIdVanBanLuu(item.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    function onCheckStar(){\r\n        if(check === true){\r\n            setCheck(false);\r\n            deleteVanBanLuu(idVanBanLuu);\r\n        }else{\r\n            setOpenDialog(true);\r\n        }\r\n    }\r\n\r\n    function deleteVanBanLuu(idVanBanLuu){\r\n        const api = process.env.REACT_APP_API+\"vanbanluu/xoaVanBanLuu/\"+idVanBanLuu;\r\n        const requestOptions = {\r\n            method: \"DELETE\"\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            alert(\"Xóa văn bản thành công\");\r\n            props.onChangeVanBan();\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với server thất bại\");\r\n        });\r\n    }\r\n\r\n    function saveVanBanGuiNhan(idVanBanGuiNhan){\r\n        const api = process.env.REACT_APP_API+\"vanbanluu/themVanBanLuu\";\r\n        const requestOptions ={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                idNguoiDung : nguoiDung.id,\r\n                idVanBanGuiNhan : idVanBanGuiNhan,\r\n                ghiChu : ghiChu,\r\n                loaiVanBanLuu : \"Văn Bản Đến\"\r\n            })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            alert(\"Lưu văn bản thành công\");\r\n            props.onChangeVanBan();\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với server thất bại\");\r\n        });\r\n    }\r\n\r\n    if(open){\r\n        return(\r\n            <div>{getVanBan(step)}</div>\r\n        )    \r\n    }else{\r\n        return(\r\n            <div>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    <Grid container justify=\"center\" spacing={1} sm={12}>\r\n                        <Grid item sm={2}>\r\n                            <InputLabel >Tìm Kiếm</InputLabel>\r\n                            <Select\r\n                                fullWidth\r\n                                label=\"Loại Tìm Kiếm\"\r\n                                value={loaiTimKiem}\r\n                                onChange={(e)=>setLoaiTimKiem(e.target.value)}\r\n                                >\r\n                                <MenuItem value={0}>Trạng Thái</MenuItem>\r\n                                <MenuItem value={1}>Trích Yếu</MenuItem>\r\n                                <MenuItem value={3}>Số Đến</MenuItem>\r\n                                <MenuItem value={2}>Số Ký Hiệu</MenuItem>\r\n                                <MenuItem value={4}>Cấp Độ</MenuItem>\r\n                                <MenuItem value={5}>Lĩnh Vực</MenuItem>\r\n                                <MenuItem value={6}>Loại Văn Bản</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            {getTimKiem(loaiTimKiem,setTimKiem,listLinhVuc,listLoai)}\r\n                        </Grid>\r\n                        <Grid item sm={2} >\r\n                            <Button \r\n                                fullWidth \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={() =>{getList(loaiTimKiem,timKiem,setListVanBan)}}\r\n                            >\r\n                                Tìm Kiếm\r\n                            </Button>\r\n                            <Button \r\n                                fullWidth \r\n                                variant=\"contained\" \r\n                                color=\"secondary\" \r\n                                onClick={() =>{getList(-1,timKiem,setListVanBan)}}\r\n                            >\r\n                                Xem Tất Cả\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid item sm={12}>\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <StyledTableRow>\r\n                                        <StyledTableCell size=\"small\" align=\"left\">STT</StyledTableCell>\r\n                                        <StyledTableCell align=\"left\">Trích Yếu</StyledTableCell>\r\n                                        <StyledTableCell size=\"small\" align=\"center\">Số Đi</StyledTableCell>\r\n                                        <StyledTableCell size=\"small\" align=\"center\">Số Ký Hiệu</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Trạng Thái</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                </TableHead>\r\n                                <ListVanBanDen\r\n                                    listVanBan={listVanBan}\r\n                                    listVanBanDen={listVanBanDen}\r\n                                    setOpen={setOpen}\r\n                                    setVanBan={setVanBan}\r\n                                    setVanBanGui={setVanBanGui}\r\n                                    getLanhDao={getLanhDao}\r\n                                    getLinhVuc={getLinhVuc}\r\n                                    getLoaiVanBan={getLoaiVanBan}\r\n                                    checkSave={checkSave}\r\n                                />\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VanBanDen;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\VaiTro.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListVanBanDen.js",["167"],"import React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport ItemVanBan from './ItemList/ItemVanBanDen';\r\n\r\nfunction ListVanBanDen(props){\r\n    return (\r\n        <TableBody>\r\n            {props.listVanBanDen.map(((item,index)=>(\r\n                props.listVanBan.map((vanBan) =>{\r\n                    if(vanBan.id === item.idVanBan){\r\n                        return(\r\n                            <ItemVanBan\r\n                                index={index}\r\n                                vanBan={vanBan}\r\n                                setOpen={props.setOpen}\r\n                                setVanBan={props.setVanBan}\r\n                                vanBanGui = {item}\r\n                                setVanBanGui={props.setVanBanGui}\r\n                                getLanhDao={props.getLanhDao}\r\n                                getLinhVuc={props.getLinhVuc}\r\n                                getLoaiVanBan={props.getLoaiVanBan}\r\n                                checkSave={props.checkSave}\r\n                            />\r\n                        )\r\n                    }\r\n                })\r\n            )))}\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport default ListVanBanDen;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListDonVi.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListNhom.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListVanBanGui.js",["168"],"import React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport ItemVanBan from './ItemList/ItemVanBanGui';\r\n\r\nfunction ListVanBanGui(props){\r\n\r\n    return (\r\n        <TableBody>\r\n            {props.listVanBanGui.map(((item,index)=>(\r\n                props.listVanBan.map((vanBan) =>{\r\n                    if(vanBan.id === item.idVanBan){\r\n                        return(\r\n                            <ItemVanBan\r\n                                index={index}\r\n                                vanBan={vanBan}\r\n                                setOpen={props.setOpen}\r\n                                setVanBan={props.setVanBan}\r\n                                vanBanGui = {item}\r\n                                setVanBanGui={props.setVanBanGui}\r\n                                getLanhDao={props.getLanhDao}\r\n                                getLinhVuc={props.getLinhVuc}\r\n                                getLoaiVanBan={props.getLoaiVanBan}\r\n                                checkSave={props.checkSave}\r\n                            />\r\n                        )\r\n                    }\r\n                })\r\n            )))}\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport default ListVanBanGui;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemDonVi.js",["169","170","171","172"],"import React,{useState} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListPhongBan from '../ListPhongBan';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction ItemDonVi(props){\r\n    const [isCheckAll,setIsCheckAll] = useState(false);\r\n    return (\r\n        <ListItem>\r\n            <Grid container spacing={0}>\r\n                <Grid item sm={12}>\r\n                    {/* <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={isCheckAll}\r\n                                onChange={()=>{setIsCheckAll(!isCheckAll)}}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={props.donVi.tenDonVi}\r\n                    /> */}\r\n                    <Typography variant=\"h5\">{props.donVi.tenDonVi}</Typography>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                        <ListPhongBan \r\n                            listPhongBan={props.listPhongBan}\r\n                            listNguoiDung = {props.listNguoiDung}\r\n                            updateNguoiDungCheck={props.updateNguoiDungCheck}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default ItemDonVi;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemVanBanDen.js",["173"],"import React,{useState} from 'react';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\n\r\nfunction ItemVanBanDen(props){\r\n    const [vanBan] = useState(props.vanBan);\r\n    function click(){\r\n        props.setOpen(true);\r\n        props.setVanBan(vanBan);\r\n        props.setVanBanGui(props.vanBanGui);\r\n        props.getLanhDao(vanBan.idLanhDao);\r\n        props.getLinhVuc(vanBan.idLinhVucVanBan);\r\n        props.getLoaiVanBan(vanBan.idLoaiVanBan);\r\n        props.checkSave(props.vanBanGui.id);\r\n\r\n    }\r\n    return(\r\n            <TableRow onClick={() =>{click()}}>\r\n                <StyledTableCell size=\"small\" align=\"left\">{props.index+1}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{vanBan.trichYeu}</StyledTableCell>\r\n                <StyledTableCell size=\"small\" align=\"center\">{vanBan.soDen}</StyledTableCell>\r\n                <StyledTableCell size=\"small\" align=\"center\">{vanBan.soKyHieu}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{vanBan.trangThai}</StyledTableCell>\r\n            </TableRow>\r\n    )\r\n}\r\n\r\n\r\nexport default ItemVanBanDen;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemVanBanGui.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListPhongBan.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemPhongBan.js",["174","175","176","177","178","179"],"import React,{useState} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListNguoiDung from '../ListNguoiDung';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction ItemPhongBan(props){\r\n    const [phongBan] = useState(props.phongBan);\r\n    const [isCheckAll,setIsCheckAll] = useState(false);\r\n    return(\r\n        <ListItem>\r\n            <Grid container spacing={0}>\r\n                <Grid item sm={12}>\r\n                    {/* <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={isCheckAll}\r\n                                onChange={()=>{setIsCheckAll(!isCheckAll)}}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={props.phongBan.tenPhongBan}\r\n                    /> */}\r\n                    <Typography variant=\"h6\">{props.phongBan.tenPhongBan}</Typography>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                        <ListNguoiDung \r\n                            listNguoiDung={props.listNguoiDung}\r\n                            updateNguoiDungCheck={props.updateNguoiDungCheck}\r\n                        />             \r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default ItemPhongBan;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListNguoiDung.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemNguoiDung.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemNhom.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListCTNhom.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\NguoiDung.js",["180"],"import React,{useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\"\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    }\r\n  };\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction NguoiDung(props){\r\n    const classes = useStyles();\r\n    const [idNguoiDung,setIDNguoiDung] = useState(props.nguoiDung.id);\r\n    const [email,setEmail] = useState(props.nguoiDung.email);\r\n    const [soDienThoai,setSoDienThoai] = useState(props.nguoiDung.soDienThoai);\r\n    const [photo,setPhoto] = useState(props.nguoiDung.photo);\r\n\r\n    function updateNguoiDung(idNguoiDung){\r\n        const api = process.env.REACT_APP_API+\"nguoidung/capNhatNguoiDung/\"+idNguoiDung;\r\n        const requestOptions ={\r\n            method: \"PUT\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \r\n                email : email,\r\n                soDienThoai : soDienThoai ,\r\n                photo : photo\r\n            })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            props.setChange();\r\n            alert(\"Lưu thành công\");\r\n        }).catch(err=>{\r\n            alert(\"Kết nối với sever thất bại\")\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container justify=\"left\" spacing={2}>\r\n                <Grid item sm={7}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Thông Tin Người Dùng\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item sm={4}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            Ảnh Đại Diện\r\n                        </Typography>\r\n                    </Grid>\r\n                <Grid container justify=\"center\" spacing={2} sm={7}>\r\n                    <Grid item sm={12}>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={email}\r\n                            onChange={(e) =>{setEmail(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <TextField\r\n                            label=\"Số Điện Thoại\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={soDienThoai}\r\n                            onChange={(e) =>{setSoDienThoai(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={3} >\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {updateNguoiDung(idNguoiDung)}}>\r\n                            Lưu\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" spacing={2} sm={4}>\r\n                    <Grid item sm={9}>\r\n                        <Avatar \r\n                            style={{ height: '200px', width: '200px' }} \r\n                            src=\"https://cover-talk.zadn.vn/1/b/1/1/9/fd5acc4603e57c71a7ad42bb9fc20433.jpg\" \r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <input\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={(e)=>{setPhoto(e.target.value)}}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" >\r\n                                Thay Đổi Ảnh\r\n                            </Button>\r\n                        </label>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NguoiDung;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\QuanLyMatKhau.js",[],"D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\NguoiDung\\Nhom.js",["181","182","183","184","185","186","187","188"],"import React,{useState,useEffect} from 'react';   \r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListDonVi from '../../List/ListDonVi';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n    }))(TableRow);\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n        backgroundColor: theme.palette.info.main,\r\n        color: theme.palette.common.black,\r\n        }\r\n    }))(TableCell);\r\n\r\nfunction Nhom(props){\r\n    const classes = useStyles();\r\n\r\n    const[listNhom,setListNhom] = useState([]);\r\n    const[listCTNhom,setListCTNhom] = useState([]);\r\n    const[listNguoiDung,setListNguoiDung] = useState([]);\r\n    const[nguoiDung] = useState(props.nguoiDung);\r\n    const[listDonVi,setListDonVi] = useState([]);\r\n    const[listPhongBan,setListPhongBan] = useState([]);\r\n    const[idNhom,setIdNhom] = useState(0);\r\n    const[nhom,setNhom] = useState();\r\n    const[openDialog,setOpenDialog] = useState(false);\r\n    const[tenNhom,setTenNhom] = useState('');\r\n    const[change,setChange] = useState(0);\r\n\r\n    useEffect(() => {\r\n        props.nhomDB.find({},function(err,docs){\r\n            setListNhom(docs);\r\n        });\r\n        props.chiTietNhomDB.find({},function(err,docs){\r\n            setListCTNhom(docs);\r\n        });\r\n        props.donViDB.find({},function(err,docs){\r\n            setListDonVi(docs);\r\n        });\r\n        props.phongBanDB.find({},function(err,docs){\r\n            setListPhongBan(docs);\r\n        });\r\n        \r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        props.nguoiDungDB.find({},function(err,docs){\r\n            const listND = docs.map((item) =>({...item, isCheck : false }));\r\n            setListNguoiDung(listND);\r\n        })\r\n    },[change])\r\n\r\n    function updateNguoiDungCheck(id){\r\n        const updateList = listNguoiDung.map(item => {\r\n            if (item.id === id) {\r\n                return {...item,isCheck :!item.isCheck}\r\n            }\r\n            return item;\r\n        })\r\n        setListNguoiDung(updateList);\r\n    }\r\n\r\n    function getTitle(nhom) {\r\n        if(nhom){\r\n            return <Grid item container sm={12} spacing={4}>\r\n                    <Grid item sm={10}>\r\n                        <Typography variant=\"h4\" >\r\n                            {nhom.tenNhom}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={2}>\r\n                        <IconButton onClick={() => {deleteNhom(idNhom)}}>\r\n                            <DeleteIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Grid>\r\n            </Grid>\r\n        }\r\n    }\r\n\r\n    function deleteNhom(idNhom){\r\n        listCTNhom.filter(ctNhom => ctNhom.idNhom === idNhom).map((item=>{\r\n            deleteCTNhom(item.idNhom,item.idNguoiDung);\r\n        }));\r\n        const api = process.env.REACT_APP_API+\"nhom/xoaNhom/\"+idNhom;\r\n        const requestOptions = {\r\n            method: \"DELETE\"\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(data => {\r\n            props.onChangeVanBan();\r\n            alert(\"Xóa nhóm thành công\");\r\n        }).catch(err => {\r\n            alert(\"Kết nối với server thất bại\");\r\n        })\r\n    }\r\n\r\n    function deleteCTNhom(idNhom,idNguoiDung){\r\n        const api = process.env.REACT_APP_API+\"chitietnhom/xoaChiTietNhom/\"+idNhom+\"/\"+idNguoiDung;\r\n        const requestOptions = {\r\n            method: \"DELETE\"\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(data=>{\r\n            props.onChangeVanBan();\r\n        });\r\n    }\r\n\r\n    function getNguoiDungNhom(idNguoiDung,index){\r\n        let nguoiDung;\r\n        listNguoiDung.map(item => {\r\n            if(item.id === idNguoiDung){\r\n                nguoiDung = item;\r\n            }\r\n        });\r\n        return <StyledTableRow>\r\n                    <StyledTableCell>{index+1}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{nguoiDung.tenNguoiDung}</StyledTableCell>\r\n                    {getPhongBan(nguoiDung.idPhongBan)}\r\n                    <StyledTableCell>\r\n                        <IconButton onClick={() => {deleteCTNhom(idNhom,nguoiDung.id)}}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </StyledTableCell>\r\n                </StyledTableRow>\r\n    }\r\n\r\n    function luuNhom(){\r\n        const api = process.env.REACT_APP_API+\"nhom/themNhom\";\r\n        const requestOptions ={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                tenNhom : tenNhom,\r\n                idNguoiTao : nguoiDung.id\r\n            })\r\n        };\r\n        fetch(api,requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            listNguoiDung.map(item => {\r\n                if(item.isCheck === true) {\r\n                    luuChiTietNhom(data.id,item.id);\r\n                }\r\n            });\r\n            setTenNhom(\"\");\r\n            props.onChangeVanBan();\r\n            setChange(change+1);\r\n            alert(\"Lưu văn bản thành công\");\r\n        }).catch(err =>{\r\n            alert(\"Kết nối với sever thất bại\");\r\n        })\r\n    }\r\n\r\n    function luuChiTietNhom(idNhom,idNguoiDung){\r\n        const api = process.env.REACT_APP_API+\"chitietnhom/themChiTietNhom\";\r\n        const requestOptions ={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                idNhom : idNhom,\r\n                idNguoiDung : idNguoiDung\r\n            })\r\n        };\r\n        fetch(api,requestOptions);\r\n    }\r\n\r\n    function getPhongBan(idPhongBan){\r\n        let tenPhongBan;\r\n        listPhongBan.map((item => {\r\n            if(item.id === idPhongBan){\r\n                tenPhongBan = item.tenPhongBan;\r\n            }\r\n        }));\r\n        return <StyledTableCell align=\"center\">{tenPhongBan}</StyledTableCell>\r\n    }\r\n\r\n    function getListDonVi(idNhom){\r\n        if(idNhom===0)\r\n            return <div/>\r\n        else \r\n            return <TableContainer> \r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell size=\"small\">STT</StyledTableCell>\r\n                                    <StyledTableCell align=\"left\" >Tên Nhân Viên</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">Phòng Ban</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\"></StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {listCTNhom.filter(ctNhom => ctNhom.idNhom === idNhom).map((item, index) =>(\r\n                                        getNguoiDungNhom(item.idNguoiDung,index)\r\n                                ))}\r\n                                <StyledTableRow>\r\n                                    <StyledTableCell>\r\n                                        <ListItem button >\r\n                                            <ListItemIcon>\r\n                                                <AddIcon />\r\n                                            </ListItemIcon>\r\n                                        </ListItem>\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell/>\r\n                                    <StyledTableCell/>\r\n                                    <StyledTableCell/>\r\n                                </StyledTableRow>\r\n                            </TableBody>\r\n                        </Table> \r\n                    </TableContainer>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={openDialog} onClose={()=>{setOpenDialog(false)}}>\r\n                <DialogTitle>\r\n                    Tên Nhóm\r\n                </DialogTitle>\r\n                <TextField\r\n                    label=\"Tên Nhóm\"\r\n                    value={tenNhom}\r\n                    onChange={(e)=>{setTenNhom(e.target.value)}}\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    fullWidth\r\n                />\r\n                <DialogTitle>\r\n                    Chọn Nhân Viên\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <ListDonVi\r\n                        listDonVi={listDonVi}\r\n                        listPhongBan={listPhongBan}\r\n                        listNguoiDung={listNguoiDung}\r\n                        updateNguoiDungCheck={updateNguoiDungCheck}\r\n                        setListNguoiDung={setListNguoiDung}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setOpenDialog(false);setTenNhom(\"\")}}>Hủy</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{setOpenDialog(false);luuNhom()}}>Lưu</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid container justify=\"center\" spacing={4}>\r\n                <Grid item sm={3}>\r\n                    <ListSubheader inset>Nhóm</ListSubheader>\r\n                    {listNhom.map(item=>(\r\n                        <ListItem button onClick={() =>{setIdNhom(item.id);setNhom(item)}}>\r\n                            <ListItemText primary={item.tenNhom} />             \r\n                        </ListItem>\r\n                    ))}\r\n                    <ListItem button onClick={() =>{setIdNhom(0);setOpenDialog(true);setNhom(null);}}>\r\n                        <ListItemIcon>\r\n                            <AddIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Thêm Nhóm\" />\r\n                    </ListItem>\r\n                </Grid>\r\n                <Grid item justify=\"center\" spacing={4} sm={6}>\r\n                    {getTitle(nhom)}\r\n                    <Grid item sm={12}>\r\n                        {getListDonVi(idNhom)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nhom;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanGuiLuu.js",["189"],"import React,{useState,useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport ListVanBanLuu from '../../List/ListVanBanLuu';\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\nfunction VanBanGuiLuu(props){\r\n    const [listVanBanLuu,setListVanBanLuu] = useState([]);\r\n    const [listVanBan,setListVanBan] = useState([]);\r\n    const [listVanBanGui,setListVanBanGui] = useState([]);\r\n\r\n    \r\n    /**\r\n     * Lấy dữ liều từ NeDB vào\r\n     */\r\n    useEffect(() => {\r\n        props.vanBanLuuDB.find({loaiVanBanLuu : \"Văn Bản Gửi\"},function(err,docs){\r\n            setListVanBanLuu(docs);\r\n        });\r\n        props.vanBanDB.find({},function(err,docs){\r\n            setListVanBan(docs);\r\n        });\r\n        props.vanBanGuiDB.find({},function(err,docs){\r\n            setListVanBanGui(docs);\r\n        })\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <Grid item sm={12}>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <StyledTableRow>\r\n                                <StyledTableCell size=\"small\" align=\"left\">STT</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">Ghi Chú</StyledTableCell>\r\n                                <StyledTableCell size=\"small\" align=\"center\">Trích Yếu</StyledTableCell>\r\n                                <StyledTableCell size=\"small\" align=\"center\">Số Ký Hiệu</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        </TableHead>\r\n                        <ListVanBanLuu\r\n                            listVanBanLuu = {listVanBanLuu}\r\n                            listVanBan ={listVanBan}\r\n                            listVanBanGui ={listVanBanGui}\r\n                        />\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VanBanGuiLuu;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\TrangChu\\VanBan\\VanBanDenLuu.js",["190"],"import React,{useState,useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport ListVanBanLuu from '../../List/ListVanBanLuu';\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\nfunction VanBanDenLuu(props){\r\n    const [listVanBanLuu,setListVanBanLuu] = useState([]);\r\n    const [listVanBan,setListVanBan] = useState([]);\r\n    const [listVanBanGui,setListVanBanGui] = useState([]);\r\n    \r\n    /**\r\n     * Lấy dữ liều từ NeDB vào\r\n     */\r\n    useEffect(() => {\r\n        props.vanBanLuuDB.find({loaiVanBanLuu : \"Văn Bản Đến\"},function(err,docs){\r\n            setListVanBanLuu(docs);\r\n        });\r\n        props.vanBanDB.find({},function(err,docs){\r\n            setListVanBan(docs);\r\n        });\r\n        props.vanBanDenDB.find({},function(err,docs){\r\n            setListVanBanGui(docs);\r\n        });\r\n    },[]);\r\n    \r\n    return(\r\n        <div>\r\n            <Grid item sm={12}>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <StyledTableRow>\r\n                                <StyledTableCell size=\"small\" align=\"left\">STT</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">Ghi Chú</StyledTableCell>\r\n                                <StyledTableCell size=\"small\" align=\"center\">Trích Yếu</StyledTableCell>\r\n                                <StyledTableCell size=\"small\" align=\"center\">Số Ký Hiệu</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        </TableHead>\r\n                        <ListVanBanLuu\r\n                            listVanBanLuu = {listVanBanLuu}\r\n                            listVanBan ={listVanBan}\r\n                            listVanBanGui ={listVanBanGui}\r\n                        />\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default VanBanDenLuu;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ListVanBanLuu.js",["191"],"import React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport ItemVanBanLuu from './ItemList/ItemVanBanLuu';\r\n\r\nfunction ListVanBanLuu(props){\r\n    return (\r\n        <TableBody>\r\n            {props.listVanBanLuu.map(((item,index)=>(\r\n                props.listVanBanGui.map((vanBanGui)=>{\r\n                    if(vanBanGui.id === item.idVanBanGuiNhan){\r\n                        return(\r\n                            <ItemVanBanLuu\r\n                                vanBanLuu={item}\r\n                                index = {index}\r\n                                vanBanGui={vanBanGui}\r\n                                listVanBan={props.listVanBan}\r\n                            />\r\n                        )\r\n                    }\r\n                })\r\n            )))}\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport default ListVanBanLuu;","D:\\bitbucket\\vanthu-soft\\ui\\src\\components\\List\\ItemList\\ItemVanBanLuu.js",["192","193"],"import React,{useState,useEffect} from 'react';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.black,\r\n    }\r\n}))(TableCell);\r\n\r\nfunction ItemVanBanLuu(props){\r\n    const [vanBanLuu] = useState(props.vanBanLuu);\r\n    const [trichYeu,setTrichYeu] = useState(\"\");\r\n    const [soKyHieu,setSoKyHieu] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        props.listVanBan.map((item)=>{\r\n            if(item.id === props.vanBanGui.idVanBan){\r\n                setTrichYeu(item.trichYeu);\r\n                setSoKyHieu(item.soKyHieu);\r\n            }\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <TableRow>\r\n            <StyledTableCell size=\"small\" align=\"left\">{props.index+1}</StyledTableCell>\r\n            <StyledTableCell align=\"left\">{vanBanLuu.ghiChu}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{trichYeu}</StyledTableCell>\r\n            <StyledTableCell size=\"small\" align=\"center\">{soKyHieu}</StyledTableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default ItemVanBanLuu;",{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":2,"column":15,"nodeType":"200","messageId":"201","endLine":2,"endColumn":23},{"ruleId":"202","severity":1,"message":"203","line":50,"column":7,"nodeType":"204","endLine":50,"endColumn":9,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":196,"column":22,"nodeType":"208","messageId":"209","endLine":196,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":244,"column":3,"nodeType":"204","endLine":244,"endColumn":5,"suggestions":"211"},{"ruleId":"202","severity":1,"message":"212","line":304,"column":5,"nodeType":"204","endLine":304,"endColumn":13,"suggestions":"213"},{"ruleId":"206","severity":1,"message":"207","line":331,"column":22,"nodeType":"208","messageId":"209","endLine":331,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":364,"column":28,"nodeType":"208","messageId":"209","endLine":364,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":401,"column":28,"nodeType":"208","messageId":"209","endLine":401,"endColumn":30},{"ruleId":"214","severity":1,"message":"215","line":67,"column":26,"nodeType":"216","endLine":67,"endColumn":32},{"ruleId":"198","severity":1,"message":"217","line":69,"column":12,"nodeType":"200","messageId":"201","endLine":69,"endColumn":19},{"ruleId":"198","severity":1,"message":"218","line":69,"column":20,"nodeType":"200","messageId":"201","endLine":69,"endColumn":30},{"ruleId":"202","severity":1,"message":"219","line":115,"column":7,"nodeType":"204","endLine":115,"endColumn":13,"suggestions":"220"},{"ruleId":"202","severity":1,"message":"221","line":142,"column":7,"nodeType":"204","endLine":142,"endColumn":9,"suggestions":"222"},{"ruleId":"206","severity":1,"message":"207","line":256,"column":34,"nodeType":"208","messageId":"209","endLine":256,"endColumn":36},{"ruleId":"202","severity":1,"message":"223","line":177,"column":7,"nodeType":"204","endLine":177,"endColumn":9,"suggestions":"224"},{"ruleId":"206","severity":1,"message":"207","line":257,"column":32,"nodeType":"208","messageId":"209","endLine":257,"endColumn":34},{"ruleId":"202","severity":1,"message":"225","line":218,"column":7,"nodeType":"204","endLine":218,"endColumn":9,"suggestions":"226"},{"ruleId":"202","severity":1,"message":"219","line":225,"column":7,"nodeType":"204","endLine":225,"endColumn":9,"suggestions":"227"},{"ruleId":"206","severity":1,"message":"207","line":523,"column":34,"nodeType":"208","messageId":"209","endLine":523,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":601,"column":32,"nodeType":"208","messageId":"209","endLine":601,"endColumn":34},{"ruleId":"206","severity":1,"message":"228","line":9,"column":47,"nodeType":"208","messageId":"229","endLine":9,"endColumn":49},{"ruleId":"206","severity":1,"message":"228","line":10,"column":47,"nodeType":"208","messageId":"229","endLine":10,"endColumn":49},{"ruleId":"198","severity":1,"message":"230","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"198","severity":1,"message":"231","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":24},{"ruleId":"198","severity":1,"message":"232","line":10,"column":12,"nodeType":"200","messageId":"201","endLine":10,"endColumn":22},{"ruleId":"198","severity":1,"message":"233","line":10,"column":23,"nodeType":"200","messageId":"201","endLine":10,"endColumn":36},{"ruleId":"198","severity":1,"message":"234","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":20},{"ruleId":"198","severity":1,"message":"230","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"198","severity":1,"message":"231","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":24},{"ruleId":"198","severity":1,"message":"235","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":12},{"ruleId":"198","severity":1,"message":"236","line":11,"column":12,"nodeType":"200","messageId":"201","endLine":11,"endColumn":20},{"ruleId":"198","severity":1,"message":"232","line":12,"column":12,"nodeType":"200","messageId":"201","endLine":12,"endColumn":22},{"ruleId":"198","severity":1,"message":"233","line":12,"column":23,"nodeType":"200","messageId":"201","endLine":12,"endColumn":36},{"ruleId":"198","severity":1,"message":"237","line":35,"column":24,"nodeType":"200","messageId":"201","endLine":35,"endColumn":38},{"ruleId":"198","severity":1,"message":"235","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":12},{"ruleId":"198","severity":1,"message":"238","line":56,"column":11,"nodeType":"200","messageId":"201","endLine":56,"endColumn":18},{"ruleId":"202","severity":1,"message":"239","line":84,"column":7,"nodeType":"204","endLine":84,"endColumn":9,"suggestions":"240"},{"ruleId":"202","severity":1,"message":"219","line":91,"column":7,"nodeType":"204","endLine":91,"endColumn":15,"suggestions":"241"},{"ruleId":"206","severity":1,"message":"207","line":121,"column":72,"nodeType":"208","messageId":"209","endLine":121,"endColumn":74},{"ruleId":"206","severity":1,"message":"207","line":150,"column":32,"nodeType":"208","messageId":"209","endLine":150,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":180,"column":36,"nodeType":"208","messageId":"209","endLine":180,"endColumn":38},{"ruleId":"206","severity":1,"message":"207","line":209,"column":32,"nodeType":"208","messageId":"209","endLine":209,"endColumn":34},{"ruleId":"202","severity":1,"message":"242","line":46,"column":7,"nodeType":"204","endLine":46,"endColumn":9,"suggestions":"243"},{"ruleId":"202","severity":1,"message":"244","line":45,"column":7,"nodeType":"204","endLine":45,"endColumn":9,"suggestions":"245"},{"ruleId":"206","severity":1,"message":"228","line":9,"column":52,"nodeType":"208","messageId":"229","endLine":9,"endColumn":54},{"ruleId":"206","severity":1,"message":"207","line":19,"column":36,"nodeType":"208","messageId":"209","endLine":19,"endColumn":38},{"ruleId":"202","severity":1,"message":"246","line":25,"column":7,"nodeType":"204","endLine":25,"endColumn":9,"suggestions":"247"},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idTaiKhoan'. Either include it or remove the dependency array.","ArrayExpression",["250"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'donViDB', 'getPhongBan', 'idTaiKhoan', 'linhVucVanBanDB', 'loaiVanBanDB', 'nguoiDungDB', 'phongBanDB', 'vanBanDB', 'vanBanDenDB', and 'vanBanGuiDB'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'chiTietNhomDB', 'chiTietVanBanGuiDB', 'getChiTietVanBanDen', 'getNhom', 'getVanBanGui', 'getVanBanLuu', 'idTaiKhoan', 'logout', 'nhomDB', 'vanBanDB', 'vanBanDenDB', 'vanBanGuiDB', and 'vanBanLuuDB'. Either include them or remove the dependency array.",["252"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'lanhDao' is assigned a value but never used.","'setLanhDao' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.nguoiDungDB'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'nguoiDung.idPhongBan', 'props.chiTietNhomDB', 'props.donViDB', 'props.linhVucVanBanDB', 'props.loaiVanBanDB', 'props.nhomDB', and 'props.phongBanDB'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'props.linhVucVanBanDB', 'props.loaiVanBanDB', 'props.vanBanDB', 'props.vanBanGuiDB', and 'props.vanBanLuuDB'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'nguoiDung.idPhongBan', 'props.chiTietNhomDB', 'props.donViDB', 'props.linhVucVanBanDB', 'props.loaiVanBanDB', 'props.nhomDB', 'props.phongBanDB', 'props.vanBanDB', 'props.vanBanDenDB', and 'props.vanBanLuuDB'. Either include them or remove the dependency array.",["256"],["257"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'isCheckAll' is assigned a value but never used.","'setIsCheckAll' is assigned a value but never used.","'makeStyles' is defined but never used.","'List' is defined but never used.","'phongBan' is assigned a value but never used.","'setIDNguoiDung' is assigned a value but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.chiTietNhomDB', 'props.donViDB', 'props.nhomDB', and 'props.phongBanDB'. Either include them or remove the dependency array.",["258"],["259"],"React Hook useEffect has missing dependencies: 'props.vanBanDB', 'props.vanBanGuiDB', and 'props.vanBanLuuDB'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'props.vanBanDB', 'props.vanBanDenDB', and 'props.vanBanLuuDB'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'props.listVanBan' and 'props.vanBanGui.idVanBan'. Either include them or remove the dependency array.",["262"],"no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [idTaiKhoan]",{"range":"289","text":"290"},"Update the dependencies array to be: [donViDB, getPhongBan, idTaiKhoan, linhVucVanBanDB, loaiVanBanDB, nguoiDungDB, phongBanDB, vanBanDB, vanBanDenDB, vanBanGuiDB]",{"range":"291","text":"292"},"Update the dependencies array to be: [change, chiTietNhomDB, chiTietVanBanGuiDB, getChiTietVanBanDen, getNhom, getVanBanGui, getVanBanLuu, idTaiKhoan, logout, nhomDB, vanBanDB, vanBanDenDB, vanBanGuiDB, vanBanLuuDB]",{"range":"293","text":"294"},"Update the dependencies array to be: [props.nguoiDungDB, step]",{"range":"295","text":"296"},"Update the dependencies array to be: [nguoiDung.idPhongBan, props.chiTietNhomDB, props.donViDB, props.linhVucVanBanDB, props.loaiVanBanDB, props.nhomDB, props.phongBanDB]",{"range":"297","text":"298"},"Update the dependencies array to be: [props.linhVucVanBanDB, props.loaiVanBanDB, props.vanBanDB, props.vanBanGuiDB, props.vanBanLuuDB]",{"range":"299","text":"300"},"Update the dependencies array to be: [nguoiDung.idPhongBan, props.chiTietNhomDB, props.donViDB, props.linhVucVanBanDB, props.loaiVanBanDB, props.nhomDB, props.phongBanDB, props.vanBanDB, props.vanBanDenDB, props.vanBanLuuDB]",{"range":"301","text":"302"},"Update the dependencies array to be: [props.nguoiDungDB]",{"range":"303","text":"304"},"Update the dependencies array to be: [props.chiTietNhomDB, props.donViDB, props.nhomDB, props.phongBanDB]",{"range":"305","text":"306"},"Update the dependencies array to be: [change, props.nguoiDungDB]",{"range":"307","text":"308"},"Update the dependencies array to be: [props.vanBanDB, props.vanBanGuiDB, props.vanBanLuuDB]",{"range":"309","text":"310"},"Update the dependencies array to be: [props.vanBanDB, props.vanBanDenDB, props.vanBanLuuDB]",{"range":"311","text":"312"},"Update the dependencies array to be: [props.listVanBan, props.vanBanGui.idVanBan]",{"range":"313","text":"314"},[1646,1648],"[idTaiKhoan]",[8111,8113],"[donViDB, getPhongBan, idTaiKhoan, linhVucVanBanDB, loaiVanBanDB, nguoiDungDB, phongBanDB, vanBanDB, vanBanDenDB, vanBanGuiDB]",[10183,10191],"[change, chiTietNhomDB, chiTietVanBanGuiDB, getChiTietVanBanDen, getNhom, getVanBanGui, getVanBanLuu, idTaiKhoan, logout, nhomDB, vanBanDB, vanBanDenDB, vanBanGuiDB, vanBanLuuDB]",[4345,4351],"[props.nguoiDungDB, step]",[5190,5192],"[nguoiDung.idPhongBan, props.chiTietNhomDB, props.donViDB, props.linhVucVanBanDB, props.loaiVanBanDB, props.nhomDB, props.phongBanDB]",[6434,6436],"[props.linhVucVanBanDB, props.loaiVanBanDB, props.vanBanDB, props.vanBanGuiDB, props.vanBanLuuDB]",[8261,8263],"[nguoiDung.idPhongBan, props.chiTietNhomDB, props.donViDB, props.linhVucVanBanDB, props.loaiVanBanDB, props.nhomDB, props.phongBanDB, props.vanBanDB, props.vanBanDenDB, props.vanBanLuuDB]",[8505,8507],"[props.nguoiDungDB]",[3026,3028],"[props.chiTietNhomDB, props.donViDB, props.nhomDB, props.phongBanDB]",[3247,3255],"[change, props.nguoiDungDB]",[1511,1513],"[props.vanBanDB, props.vanBanGuiDB, props.vanBanLuuDB]",[1510,1512],"[props.vanBanDB, props.vanBanDenDB, props.vanBanLuuDB]",[823,825],"[props.listVanBan, props.vanBanGui.idVanBan]"]